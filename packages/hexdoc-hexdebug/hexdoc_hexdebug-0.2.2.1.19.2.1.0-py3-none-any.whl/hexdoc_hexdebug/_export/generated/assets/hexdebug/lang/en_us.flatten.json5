{"item.hexdebug.debugger": "Debugger", "item.hexdebug.evaluator": "Evaluator", "itemGroup.hexdebug.hexdebug": "HexDebug", "text.hexdebug.connected": "Debug client connected!", "text.hexdebug.no_session": "Debug session is not running.", "text.hexdebug.thwack": "Thwack!", "text.hexdebug.debugger_stopped": "Next Iota: [%d] %s", "text.autoconfig.hexdebug.title": "HexDebug Config", "text.autoconfig.hexdebug.category.client": "Client", "text.autoconfig.hexdebug.option.client.openDebugPort": "Open Debug Port", "text.autoconfig.hexdebug.option.client.openDebugPort.@Tooltip": "Whether or not a port should be opened. If false, the Debugger effectively becomes useless.", "text.autoconfig.hexdebug.option.client.debugPort": "Debug Port", "text.autoconfig.hexdebug.option.client.debugPort.@Tooltip": "Port number (1024-65535) to open for the debug client (eg. VSCode) to connect to.", "text.autoconfig.hexdebug.option.client.smartDebuggerSneakScroll": "Smart Debugger Sneak-Scroll", "text.autoconfig.hexdebug.option.client.smartDebuggerSneakScroll.@Tooltip": "If a hex is not currently being debugged and a Debugger is in your main hand, prefer shift-scrolling whatever item is in your offhand (eg. a spellbook).", "text.autoconfig.hexdebug.option.client.debuggerDisplayMode": "Debugger Display Mode", "text.autoconfig.hexdebug.option.client.debuggerDisplayMode.@Tooltip": "Changes when the Debugger should print the next iota to be evaluated.\nDISABLED: Never show Debugger status messages.\nNOT_CONNECTED: Only show Debugger status messages if a debug client is not connected.\nENABLED: Always show Debugger status messages. (default)", "text.autoconfig.hexdebug.option.client.showDebugClientLineNumber": "Show Debug Client Line Number", "text.autoconfig.hexdebug.option.client.showDebugClientLineNumber.@Tooltip": "If true, show the line number (usually 1-indexed) from the debug client (eg. VSCode) in Debugger status messages; otherwise, show the list index (0-indexed).", "hexcasting.spell.hexdebug:const/debugging": "Debugger's Reflection", "hexcasting.spell.hexdebug:breakpoint/before": "Set Breakpoint Before", "hexcasting.spell.hexdebug:breakpoint/after": "Set Breakpoint After", "hexcasting.spell.hexdebug:craft/debugger": "Craft Debugger", "hexdebug.tooltip.debugger.step_mode": "Mode: %s", "hexdebug.tooltip.debugger.step_mode.continue": "Continue", "hexdebug.tooltip.debugger.step_mode.over": "Step Over", "hexdebug.tooltip.debugger.step_mode.in": "Step In", "hexdebug.tooltip.debugger.step_mode.out": "Step Out", "hexdebug.tooltip.debugger.step_mode.restart": "Restart", "hexdebug.tooltip.debugger.step_mode.stop": "Stop", "hexdebug.category.items.entry.debugging": "Debugging Items", "hexdebug.category.items.entry.debugging.page.debugger": "I have read vague descriptions of a strange object used by the ancients to help discover issues in complex _Hexes. I believe I have managed to reproduce this item; I call it the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$.$(br2)It seems to work in a similar way to $(l:items/hexcasting)$(item)Artifacts/$. However, I can also use it to cast a _Hex right from an item (like a $(l:items/focus)$(item)Focus/$) in my off-hand.$(br2)Unfortunately, the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$ is not very useful on its own; it seems to require the use of some sort of $(l:https://marketplace.visualstudio.com/items?itemName=object-Object.hex-casting)external tool/$.", "hexdebug.category.items.entry.debugging.page.thwack": "$(italic)Thwack!/$", "hexdebug.category.items.entry.debugging.page.evaluator": "Complementing the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$, I've also created a new type of staff: the $(l:hexdebug:items/debugging#evaluator)$(item)Evaluator/$.$(br2)While debugging a _Hex, patterns drawn with this staff will be cast using the current stack and $(l:patterns/readwrite#hexcasting:local)$(thing)ravenmind/$ of the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$.$(br2)Clearing the grid seems to reset the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$ to just before the first pattern was drawn with the $(l:hexdebug:items/debugging#evaluator)$(item)Evaluator/$. It will not, of course, undo any effects performed by spells on the world.", "hexdebug.category.items.entry.debugging.page.thwonk": "$(italic)Thwonk!/$", "hexdebug.category.patterns.entry.debugging": "Debugging", "hexdebug.category.patterns.entry.debugging.page.const/debugging": "Adds $(thing)True/$ to the top of the stack if executed by a $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$, or $(thing)False/$ otherwise.", "hexdebug.category.patterns.entry.debugging.page.breakpoint/before": "Pauses the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$ before executing this pattern.", "hexdebug.category.patterns.entry.debugging.page.breakpoint/after": "Pauses the $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$ after executing this pattern (ie. before executing the next pattern).", "hexdebug.category.patterns.entry.debugging.page.craft/debugger": "Creates a $(l:hexdebug:items/debugging#debugger)$(item)Debugger/$ that casts a _Hex, similar to $(l:patterns/spells/hexcasting)certain other patterns/$ I've used in the past.$(br2)Costs about ten $(l:items/amethyst)$(item)Charged Amethyst/$."}