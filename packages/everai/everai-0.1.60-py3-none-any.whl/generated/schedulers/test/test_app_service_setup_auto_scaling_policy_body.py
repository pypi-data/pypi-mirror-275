# coding: utf-8

"""
    everai/scheduler/v1/register_message.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from generated.schedulers.models.app_service_setup_auto_scaling_policy_body import AppServiceSetupAutoScalingPolicyBody

class TestAppServiceSetupAutoScalingPolicyBody(unittest.TestCase):
    """AppServiceSetupAutoScalingPolicyBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppServiceSetupAutoScalingPolicyBody:
        """Test AppServiceSetupAutoScalingPolicyBody
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppServiceSetupAutoScalingPolicyBody`
        """
        model = AppServiceSetupAutoScalingPolicyBody()
        if include_optional:
            return AppServiceSetupAutoScalingPolicyBody(
                auto_scaling_policy = generated.schedulers.models.autoscaling_policy_setting.autoscaling policy setting(
                    build_in_policy = generated.schedulers.models.v1_build_in_policy.v1BuildInPolicy(
                        min_worker_num = 56, 
                        max_worker_num = 56, 
                        max_queue_num = 56, 
                        max_idle_time = '', ), 
                    custom_policy = generated.schedulers.models.v1_custom_policy.v1CustomPolicy(
                        rules = [
                            generated.schedulers.models.v1_rule.v1Rule(
                                factor = [
                                    ''
                                    ], 
                                behavior = 'HOLD_ON', 
                                custom_func = {
                                    'key' : None
                                    }, )
                            ], ), )
            )
        else:
            return AppServiceSetupAutoScalingPolicyBody(
                auto_scaling_policy = generated.schedulers.models.autoscaling_policy_setting.autoscaling policy setting(
                    build_in_policy = generated.schedulers.models.v1_build_in_policy.v1BuildInPolicy(
                        min_worker_num = 56, 
                        max_worker_num = 56, 
                        max_queue_num = 56, 
                        max_idle_time = '', ), 
                    custom_policy = generated.schedulers.models.v1_custom_policy.v1CustomPolicy(
                        rules = [
                            generated.schedulers.models.v1_rule.v1Rule(
                                factor = [
                                    ''
                                    ], 
                                behavior = 'HOLD_ON', 
                                custom_func = {
                                    'key' : None
                                    }, )
                            ], ), ),
        )
        """

    def testAppServiceSetupAutoScalingPolicyBody(self):
        """Test AppServiceSetupAutoScalingPolicyBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
