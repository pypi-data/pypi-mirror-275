# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/04.conn.tcp.ipynb.

# %% auto 0
__all__ = ['tcp_context']

# %% ../../nbs/04.conn.tcp.ipynb 2
import contextlib
import os
from typing import Optional, Generator

# %% ../../nbs/04.conn.tcp.ipynb 3
from .remote_can_client import RemoteCanClient
from ..config.vehicles import Truck

# %% ../../nbs/04.conn.tcp.ipynb 5
@contextlib.contextmanager
def tcp_context(
    vehicle: Truck,  # Truck object
    host: str,  # host for Remote Can Server
    port: str,  # port for Remote Can Server
    proxy: Optional[str] = None,  # proxy for Remote Can Server
) -> Generator[
    RemoteCanClient, None, None
]:  #   context manager for RemoteCanClient connection
    """tcp context manager."""

    os.environ["http_proxy"] = proxy
    remote_can_client = RemoteCanClient(
        host,
        port,
        truck=vehicle,
    )
    try:
        yield remote_can_client
    except Exception as e:
        raise e
    finally:
        remote_can_client.close()
