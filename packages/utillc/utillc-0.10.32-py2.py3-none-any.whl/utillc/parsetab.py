
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSCOLONleftTIMESDIVIDErightUMINUSASSIGN COLON COMMA DIVIDE DIVIDE2 DOT EKON EKOT EKOX EQUALS FLOAT LBRACE LBRACKET LPAREN MINUS NAME NUMBER PLUS RBRACE RBRACKET RPAREN STRING TIMEStop : expressionstop : EKON expressionstop : EKOX expressionstop : EKOT expressionsexpressions : expressionexpressions : expressions COMMA expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression EQUALS expression\n                  | NAME ASSIGN expression\n                  | expression DIVIDE2 expression\n                  | expression DIVIDE expression name : expression DOT dot_namesexpression : MINUS expression %prec UMINUSexpression : LBRACE expressionsCC RBRACEexpression : LPAREN expressions RPAREN\n                  | expression LBRACKET expressionsBE RBRACKET\n                  | name LPAREN expressionsV RPAREN\n    expression : NUMBERexpression : FLOATexpression : nameexpression : STRINGdot_names : NAMEexpressionsBE : expressionsBE : expressionsBEE COMMA expressionsBEexpressionsCC : expressionsCC1expressionsCC : expressionsCC COMMA expressionsCC1expressionsCC1 : expression COLON expressionexpressionsBE : expressionsBEEexpressionsBEE : expressionsBEE : expressionexpressionsBEE : COLONexpressionsBEE : expression COLON expressionsBEEexpressionsV : expressionsV : expressions name : NAME'
    
_lr_action_items = {'EKON':([0,],[3,]),'EKOX':([0,],[4,]),'EKOT':([0,],[5,]),'NAME':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,26,28,33,49,50,54,56,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,46,8,8,8,8,8,8,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,27,28,31,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,54,55,56,58,59,],[7,7,7,7,20,7,-37,7,7,-22,-20,-21,-23,7,7,7,7,7,7,7,7,-15,7,20,7,20,-7,-8,-9,20,20,-13,20,-14,-24,20,-16,7,7,-17,7,-18,7,20,-19,]),'LBRACE':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,28,33,49,50,54,56,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LPAREN':([0,3,4,5,7,8,9,10,11,15,19,20,21,22,23,24,25,28,33,45,46,49,50,54,56,],[10,10,10,10,10,-37,10,10,33,10,10,10,10,10,10,10,10,10,10,-14,-24,10,10,10,10,]),'NUMBER':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,28,33,49,50,54,56,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FLOAT':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,28,33,49,50,54,56,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'STRING':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,28,33,49,50,54,56,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,6,8,11,12,13,14,16,17,18,27,34,35,36,37,38,39,40,45,46,47,48,51,55,59,],[0,-1,-5,-37,-22,-20,-21,-23,-2,-3,-4,-15,-6,-7,-8,-9,-10,-12,-13,-14,-24,-11,-16,-17,-18,-19,]),'COMMA':([2,6,8,11,12,13,14,16,17,18,25,27,29,30,32,34,35,36,37,38,39,40,41,43,44,45,46,47,48,51,53,54,55,56,57,58,59,60,],[15,-5,-37,-22,-20,-21,-23,15,15,15,-31,-15,49,-27,15,-6,-7,-8,-9,-10,-12,-13,-32,56,-33,-14,-24,-11,-16,-17,15,-31,-18,-31,-28,-29,-19,-34,]),'RPAREN':([6,8,11,12,13,14,27,32,33,34,35,36,37,38,39,40,45,46,47,48,51,52,53,55,59,],[-5,-37,-22,-20,-21,-23,-15,51,-35,-6,-7,-8,-9,-10,-12,-13,-14,-24,-11,-16,-17,59,-36,-18,-19,]),'PLUS':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[19,-37,-22,-20,-21,-23,-15,19,19,-7,-8,-9,19,19,-13,19,-14,-24,19,-16,-17,-18,19,-19,]),'TIMES':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[21,-37,-22,-20,-21,-23,-15,21,21,21,21,-9,21,21,-13,21,-14,-24,21,-16,-17,-18,21,-19,]),'EQUALS':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[22,-37,-22,-20,-21,-23,-15,22,22,-7,-8,-9,22,22,-13,22,-14,-24,22,-16,-17,-18,22,-19,]),'DIVIDE2':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[23,-37,-22,-20,-21,-23,-15,23,23,-7,-8,-9,23,23,-13,23,-14,-24,23,-16,-17,-18,23,-19,]),'DIVIDE':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[24,-37,-22,-20,-21,-23,-15,24,24,24,24,-9,24,24,-13,24,-14,-24,24,-16,-17,-18,24,-19,]),'LBRACKET':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[25,-37,-22,-20,-21,-23,-15,25,25,-7,-8,-9,25,25,-13,25,-14,-24,25,-16,-17,-18,25,-19,]),'DOT':([6,8,11,12,13,14,27,31,34,35,36,37,38,39,40,41,45,46,47,48,51,55,58,59,],[26,-37,-22,-20,-21,-23,-15,26,26,-7,-8,-9,26,26,-13,26,-14,-24,26,-16,-17,-18,26,-19,]),'ASSIGN':([8,],[28,]),'COLON':([8,11,12,13,14,25,27,31,35,36,37,38,39,40,41,45,46,47,48,51,54,55,56,59,],[-37,-22,-20,-21,-23,44,-15,50,-7,-8,-9,-10,-12,-13,54,-14,-24,-11,-16,-17,44,-18,44,-19,]),'RBRACKET':([8,11,12,13,14,25,27,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,54,55,56,59,60,61,],[-37,-22,-20,-21,-23,-25,-15,-7,-8,-9,-10,-12,-13,-32,55,-30,-33,-14,-24,-11,-16,-17,-31,-18,-25,-19,-34,-26,]),'RBRACE':([8,11,12,13,14,27,29,30,35,36,37,38,39,40,45,46,47,48,51,55,57,58,59,],[-37,-22,-20,-21,-23,-15,48,-27,-7,-8,-9,-10,-12,-13,-14,-24,-11,-16,-17,-18,-28,-29,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top':([0,],[1,]),'expressions':([0,3,4,5,10,33,],[2,16,17,18,32,53,]),'expression':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,28,33,49,50,54,56,],[6,6,6,6,27,31,6,34,35,36,37,38,39,40,41,47,6,31,58,41,41,]),'name':([0,3,4,5,7,9,10,15,19,20,21,22,23,24,25,28,33,49,50,54,56,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'expressionsCC':([9,],[29,]),'expressionsCC1':([9,49,],[30,57,]),'expressionsBE':([25,56,],[42,61,]),'expressionsBEE':([25,54,56,],[43,60,43,]),'dot_names':([26,],[45,]),'expressionsV':([33,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> expressions','top',1,'p_top','utillc.py',172),
  ('top -> EKON expressions','top',2,'p_top_1','utillc.py',176),
  ('top -> EKOX expressions','top',2,'p_top_2','utillc.py',179),
  ('top -> EKOT expressions','top',2,'p_top_3','utillc.py',183),
  ('expressions -> expression','expressions',1,'p_expressions_1','utillc.py',187),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions_2','utillc.py',191),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','utillc.py',196),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','utillc.py',197),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','utillc.py',198),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','utillc.py',199),
  ('expression -> NAME ASSIGN expression','expression',3,'p_expression_binop','utillc.py',200),
  ('expression -> expression DIVIDE2 expression','expression',3,'p_expression_binop','utillc.py',201),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','utillc.py',202),
  ('name -> expression DOT dot_names','name',3,'p_expression_dot','utillc.py',206),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','utillc.py',210),
  ('expression -> LBRACE expressionsCC RBRACE','expression',3,'p_expression_dict','utillc.py',214),
  ('expression -> LPAREN expressions RPAREN','expression',3,'p_expression_group','utillc.py',218),
  ('expression -> expression LBRACKET expressionsBE RBRACKET','expression',4,'p_expression_group','utillc.py',219),
  ('expression -> name LPAREN expressionsV RPAREN','expression',4,'p_expression_group','utillc.py',220),
  ('expression -> NUMBER','expression',1,'p_expression_number','utillc.py',230),
  ('expression -> FLOAT','expression',1,'p_expression_float','utillc.py',234),
  ('expression -> name','expression',1,'p_expression_name','utillc.py',238),
  ('expression -> STRING','expression',1,'p_expression_string','utillc.py',242),
  ('dot_names -> NAME','dot_names',1,'p_dot_names_1','utillc.py',246),
  ('expressionsBE -> <empty>','expressionsBE',0,'p_expressionsBE_1','utillc.py',255),
  ('expressionsBE -> expressionsBEE COMMA expressionsBE','expressionsBE',3,'p_expressionsBE_2','utillc.py',259),
  ('expressionsCC -> expressionsCC1','expressionsCC',1,'p_expressionsCC_1','utillc.py',263),
  ('expressionsCC -> expressionsCC COMMA expressionsCC1','expressionsCC',3,'p_expressionsCC_2','utillc.py',267),
  ('expressionsCC1 -> expression COLON expression','expressionsCC1',3,'p_expressionsCC1_1','utillc.py',271),
  ('expressionsBE -> expressionsBEE','expressionsBE',1,'p_expressionsBE_3','utillc.py',277),
  ('expressionsBEE -> <empty>','expressionsBEE',0,'p_expressionsBEE_0','utillc.py',281),
  ('expressionsBEE -> expression','expressionsBEE',1,'p_expressionsBEE_1','utillc.py',284),
  ('expressionsBEE -> COLON','expressionsBEE',1,'p_expressionsBEE_2','utillc.py',287),
  ('expressionsBEE -> expression COLON expressionsBEE','expressionsBEE',3,'p_expressionsBEEXX_3','utillc.py',291),
  ('expressionsV -> <empty>','expressionsV',0,'p_expressionsV_1','utillc.py',297),
  ('expressionsV -> expressions','expressionsV',1,'p_expressionsV_2','utillc.py',301),
  ('name -> NAME','name',1,'p_name_1','utillc.py',309),
]
