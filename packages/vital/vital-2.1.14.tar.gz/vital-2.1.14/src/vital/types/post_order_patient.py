# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .addres import Addres
from .post_order_patient_birth_date import PostOrderPatientBirthDate
from .telecom_item import TelecomItem
from .vital_core_schemas_request_schemas_orders_name_item import VitalCoreSchemasRequestSchemasOrdersNameItem

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class PostOrderPatient(pydantic.BaseModel):
    resource_type: str = pydantic.Field(alias="resourceType")
    name: typing.List[VitalCoreSchemasRequestSchemasOrdersNameItem]
    telecom: typing.List[TelecomItem]
    gender: str
    birth_date: PostOrderPatientBirthDate = pydantic.Field(alias="birthDate")
    address: typing.List[Addres]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
