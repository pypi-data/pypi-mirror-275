export const id=5475;export const ids=[5475];export const modules={77222:(i,o,e)=>{function t(i){const o=i.language||"en";return i.translationMetadata.translations[o]&&i.translationMetadata.translations[o].isRTL||!1}function s(i){return a(t(i))}function a(i){return i?"rtl":"ltr"}e.d(o,{Vc:()=>s,qC:()=>t})},66494:(i,o,e)=>{var t=e(62659),s=e(58068),a=e(5546),r=e(196),l=e(75538);(0,t.A)([(0,r.EM)("ha-button")],(function(i,o){return{F:class extends o{constructor(...o){super(...o),i(this)}},d:[{kind:"field",static:!0,key:"styles",value:()=>[l.R,a.AH`::slotted([slot=icon]){margin-inline-start:0px;margin-inline-end:8px;direction:var(--direction);display:block}.mdc-button{height:var(--button-height,36px)}.trailing-icon{display:flex}.slot-container{overflow:var(--button-slot-container-overflow,visible)}`]}]}}),s.$)},75475:(i,o,e)=>{e.r(o),e.d(o,{HacsDonwloadDialog:()=>f});var t=e(62659),s=(e(58068),e(8774),e(5546)),a=e(196),r=e(45081),l=e(33167),n=e(46531),c=e(77222),d=(e(91074),e(66494),e(88762),e(93259),e(31447)),h=e(13136),_=e(51285),p=e(93902),g=e(23240),m=e(9340),y=e(99232);const u=i=>`/hacsfiles/${i.repository.full_name.split("/")[1]}/${i.repository.file_name}${i.skipTag?"":`?hacstag=${((i,o)=>String(`${i.id}${(o||i.installed_version||i.selected_tag||i.available_version).replace(/\D+/g,"")}`))(i.repository,i.version)}`}`;var v=e(76646);let f=(0,t.A)([(0,a.EM)("hacs-download-dialog")],(function(i,o){return{F:class extends o{constructor(...o){super(...o),i(this)}},d:[{kind:"field",decorators:[(0,a.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,a.wk)()],key:"_waiting",value:()=>!0},{kind:"field",decorators:[(0,a.wk)()],key:"_installing",value:()=>!1},{kind:"field",decorators:[(0,a.wk)()],key:"_error",value:void 0},{kind:"field",decorators:[(0,a.wk)()],key:"_repository",value:void 0},{kind:"field",decorators:[(0,a.wk)()],key:"_dialogParams",value:void 0},{kind:"field",decorators:[(0,a.wk)()],key:"_selectedVersion",value:void 0},{kind:"method",key:"showDialog",value:async function(i){this._dialogParams=i,this._waiting=!1,i.repository?this._repository=i.repository:await this._fetchRepository(),this._repository&&"commit"!==this._repository.version_or_commit&&(this._selectedVersion=this._repository.available_version),(0,p.zl)(this.hass,(i=>{this._error=i,this._installing=!1}),h.a.ERROR),await this.updateComplete}},{kind:"method",key:"closeDialog",value:function(){this._dialogParams=void 0,this._repository=void 0,this._error=void 0,this._installing=!1,this._waiting=!1,(0,l.r)(this,"dialog-closed",{dialog:this.localName})}},{kind:"field",key:"_getInstallPath",value:()=>(0,r.A)((i=>{let o=i.local_path;return["template","theme","python_script"].includes(i.category)&&(o=`${o}/${i.file_name}`),o}))},{kind:"method",key:"_fetchRepository",value:async function(){this._repository=await(0,_.vA)(this.hass,this._dialogParams.repositoryId)}},{kind:"method",key:"render",value:function(){var i;if(!this._dialogParams||!this._repository)return s.s6;const o=this._getInstallPath(this._repository),e=[{name:"beta",selector:{boolean:{}}},{name:"version",selector:{select:{options:this._repository.releases.concat("hacs/integration"===this._repository.full_name||this._repository.hide_default_branch?[]:[this._repository.default_branch]),mode:"dropdown"}}}];return s.qy` <ha-dialog open scrimClickAction escapeKeyAction .heading="${this._repository.name}" @closed="${this.closeDialog}"> <div class="content"> ${"version"===this._repository.version_or_commit&&this._repository.installed?s.qy` <ha-form .disabled="${this._waiting}" .data="${"version"===this._repository.version_or_commit?{beta:this._repository.beta,version:this._selectedVersion}:{}}" .schema="${e}" .computeLabel="${i=>"beta"===i.name?this._dialogParams.hacs.localize("dialog_download.show_beta"):this._dialogParams.hacs.localize("dialog_download.select_version")}" @value-changed="${this._valueChanged}"> </ha-form> <ha-alert alert-type="info" .rtl="${(0,c.qC)(this.hass)}"> ${this._dialogParams.hacs.localize("dialog_download.selector_note")} <a class="learn_more" href="${(0,v.o)({path:"/docs/entities/update_entities#install-service",experimental:this._dialogParams.hacs.info.experimental})}" slot="action" target="_blank" rel="noreferrer"> ${this._dialogParams.hacs.localize("common.learn_more")}</a> </ha-alert> `:s.s6} ${this._repository.can_download?"":s.qy`<ha-alert alert-type="error" .rtl="${(0,c.qC)(this.hass)}"> ${this._dialogParams.hacs.localize("confirm.home_assistant_version_not_correct",{haversion:this.hass.config.version,minversion:this._repository.homeassistant})} </ha-alert>`} <div class="note"> ${this._dialogParams.hacs.localize("dialog_download.note_downloaded",{location:s.qy`<code>'${o}'</code>`})} ${"plugin"===this._repository.category&&"storage"!==this._dialogParams.hacs.info.lovelace_mode?s.qy` <p>${this._dialogParams.hacs.localize("dialog_download.lovelace_instruction")}</p> <pre>
                url: ${u({repository:this._repository,skipTag:!0})}
                type: module
                </pre> `:s.s6} ${"integration"===this._repository.category?s.qy`<p>${this._dialogParams.hacs.localize("dialog_download.restart")}</p>`:s.s6} </div> ${null!==(i=this._error)&&void 0!==i&&i.message?s.qy`<ha-alert alert-type="error" .rtl="${(0,c.qC)(this.hass)}"> ${this._error.message} </ha-alert>`:s.s6} ${this._installing?s.qy`<mwc-linear-progress indeterminate></mwc-linear-progress>`:s.s6} </div> <mwc-button slot="secondaryAction" @click="${this.closeDialog}" dialogInitialFocus> ${this._dialogParams.hacs.localize("common.cancel")} </mwc-button> <mwc-button slot="primaryAction" ?disabled="${!this._repository.can_download||this._waiting||this._installing}" @click="${this._installRepository}"> ${this._dialogParams.hacs.localize("common.download")} </mwc-button> </ha-dialog> `}},{kind:"method",key:"_valueChanged",value:async function(i){let o=!1;this._repository.beta!==i.detail.value.beta&&(o=!0,this._waiting=!0,await(0,p.rE)(this.hass,this._dialogParams.repositoryId,i.detail.value.beta)),i.detail.value.version&&(o=!0,this._waiting=!0,await(0,_.J2)(this.hass,this._dialogParams.repositoryId,i.detail.value.version),this._selectedVersion=i.detail.value.version),o&&(await this._fetchRepository(),this._waiting=!1)}},{kind:"method",key:"_installRepository",value:async function(){if(!this._repository)return;if(this._waiting)return void(this._error="Waiting to update repository information, try later.");if(this._installing)return void(this._error="Already installing, please wait.");if(!this._repository.can_download)return void(this._error="Can not download this repository.");this._installing=!0,this._error=void 0;const i=this._repository.selected_tag||this._repository.available_version||this._repository.default_branch;try{var o;await(0,_.l1)(this.hass,String(this._repository.id),"commit"!==(null===(o=this._repository)||void 0===o?void 0:o.version_or_commit)?this._selectedVersion:void 0)}catch(i){return this._error=i||{message:"Could not download repository, check core logs for more information."},void(this._installing=!1)}this._dialogParams.hacs.log.debug(this._repository.category,"_installRepository"),this._dialogParams.hacs.log.debug(this._dialogParams.hacs.info.lovelace_mode,"_installRepository"),"plugin"===this._repository.category&&"storage"===this._dialogParams.hacs.info.lovelace_mode&&await async function(i,o,e){const t=new y.M("updateLovelaceResources"),s=await(0,m.kZ)(i.connection),a=`/hacsfiles/${o.full_name.split("/")[1]}`,r=u({repository:o,version:e}),l=s.find((i=>i.url.includes(a)));t.debug({namespace:a,url:r,exsisting:l}),l&&l.url!==r?(t.debug(`Updating exsusting resource for ${a}`),await(0,m.Uh)(i,l.id,{url:r,res_type:l.type})):s.map((i=>i.url)).includes(r)||(t.debug(`Adding ${r} to Lovelace resources`),await(0,m.Zg)(i,{url:r,res_type:"module"}))}(this.hass,this._repository,i),this._installing=!1,"plugin"===this._repository.category&&(0,d.dk)(this,{title:this._dialogParams.hacs.localize("common.reload"),text:s.qy`${this._dialogParams.hacs.localize("dialog.reload.description")}<br>${this._dialogParams.hacs.localize("dialog.reload.confirm")}`,dismissText:this._dialogParams.hacs.localize("common.cancel"),confirmText:this._dialogParams.hacs.localize("common.reload"),confirm:()=>{n.G.location.href=n.G.location.href}}),void 0===this._error&&this.closeDialog()}},{kind:"get",static:!0,key:"styles",value:function(){return[g.k,s.AH`.note{margin-top:12px}.lovelace{margin-top:8px}.learn_more{color:var(--hcv-text-color-primary)}pre{white-space:pre-line;user-select:all}mwc-linear-progress{margin-bottom:-8px;margin-top:4px}`]}}]}}),s.WF)},51285:(i,o,e)=>{e.d(o,{J2:()=>a,l1:()=>s,vA:()=>t});const t=async(i,o)=>i.connection.sendMessagePromise({type:"hacs/repository/info",repository_id:o}),s=async(i,o,e)=>i.connection.sendMessagePromise({type:"hacs/repository/download",repository:o,version:e}),a=async(i,o,e)=>i.connection.sendMessagePromise({type:"hacs/repository/version",repository:o,version:e})},76646:(i,o,e)=>{e.d(o,{o:()=>t});const t=i=>`https://${null!=i&&i.experimental?"experimental.hacs.xyz":"www.hacs.xyz"}${(null==i?void 0:i.path)||""}`}};
//# sourceMappingURL=5475.lx8cQqxSrHs.js.map