[tool.poetry]
name = "samar"
version = "0.0.3"
description = ""
authors = ["Minghong Li <lmh0066@outlook.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9 <3.12"
scikit-learn = "^1.3.2"
matplotlib = "^3.8.2"
pandas = ">=1.1.5"
openpyxl = "^3.1.2"
seaborn = ">=0.12.2"
pyyaml = "^6.0.1"
shap = ">=0.42.1"
xlrd = ">=2.0.1"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
black = "^23.11.0"
flake8-black = "^0.3.6"
isort = "^5.12.0"
flake8-isort = "^6.1.1"
poethepoet = "^0.24.4"
pytest-cov = "^4.1.0"

[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.poe.tasks]
	[tool.poe.tasks.format]
  help     = "Run all formating tools on the code base"
  sequence = ["format-black", "format-isort"]

	[tool.poe.tasks.format-black]
  help = "Run black on the code base"
  cmd  = "black ."

	[tool.poe.tasks.format-isort]
  help = "Run isort on the code base"
  cmd  = "isort ."

	[tool.poe.tasks.test]
  help = "Run unit and feature tests"
  cmd  = "pytest --cov=samar"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
