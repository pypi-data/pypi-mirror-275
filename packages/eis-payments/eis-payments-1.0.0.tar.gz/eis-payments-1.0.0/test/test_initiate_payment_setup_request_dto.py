"""
    Emil Payment Service

    This service directly communicates with the various Payment Service Providers (PSPs)    in order to charge or refund customers. This service will automatically connect to the PSP linked   in your admin configuration; meaning if you configured Stripe, it will automatically create a payment   on Stripe when you create it in Emil.  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: kontakt@emil.de
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import eis.payments
from eis.payments.model.initiate_braintree_payment_setup_request_dto import InitiateBraintreePaymentSetupRequestDto
from eis.payments.model.initiate_stripe_payment_setup_request_dto import InitiateStripePaymentSetupRequestDto
globals()['InitiateBraintreePaymentSetupRequestDto'] = InitiateBraintreePaymentSetupRequestDto
globals()['InitiateStripePaymentSetupRequestDto'] = InitiateStripePaymentSetupRequestDto
from eis.payments.model.initiate_payment_setup_request_dto import InitiatePaymentSetupRequestDto


class TestInitiatePaymentSetupRequestDto(unittest.TestCase):
    """InitiatePaymentSetupRequestDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testInitiatePaymentSetupRequestDto(self):
        """Test InitiatePaymentSetupRequestDto"""
        # FIXME: construct object with mandatory attributes with example values
        # model = InitiatePaymentSetupRequestDto()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
