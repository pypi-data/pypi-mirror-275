"""
    Emil Payment Service

    This service directly communicates with the various Payment Service Providers (PSPs)    in order to charge or refund customers. This service will automatically connect to the PSP linked   in your admin configuration; meaning if you configured Stripe, it will automatically create a payment   on Stripe when you create it in Emil.  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: kontakt@emil.de
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import eis.payments
from eis.payments.model.initiate_braintree_payment_setup_response_class import InitiateBraintreePaymentSetupResponseClass
from eis.payments.model.initiate_stripe_payment_setup_response_class import InitiateStripePaymentSetupResponseClass
globals()['InitiateBraintreePaymentSetupResponseClass'] = InitiateBraintreePaymentSetupResponseClass
globals()['InitiateStripePaymentSetupResponseClass'] = InitiateStripePaymentSetupResponseClass
from eis.payments.model.initiate_payment_setup_response_class import InitiatePaymentSetupResponseClass


class TestInitiatePaymentSetupResponseClass(unittest.TestCase):
    """InitiatePaymentSetupResponseClass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testInitiatePaymentSetupResponseClass(self):
        """Test InitiatePaymentSetupResponseClass"""
        # FIXME: construct object with mandatory attributes with example values
        # model = InitiatePaymentSetupResponseClass()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
