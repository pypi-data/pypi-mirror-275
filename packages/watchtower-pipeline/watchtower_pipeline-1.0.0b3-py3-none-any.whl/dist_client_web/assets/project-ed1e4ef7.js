var m=Object.defineProperty;var g=(c,e,t)=>e in c?m(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var r=(c,e,t)=>(g(c,typeof e!="symbol"?e+"":e,t),t);import{f as y,J as d,I as h}from"./index-569338a4.js";const b=[[.8197601437568665,.7117544412612915,.5497459173202515,1],[.6462640762329102,.5692625641822815,.8191020488739014,1],[.5096713304519653,.7521656155586243,.5136501789093018,1],[.8272907137870789,.5883985161781311,.6541866064071655,1],[.5273313522338867,.659835934638977,.7609495520591736,1],[.7392144799232483,.7697654366493225,.5531221032142639,1],[.7357943654060364,.5509396195411682,.768614649772644,1],[.5617250204086304,.7625861167907715,.6736904978752136,1],[.8007439970970154,.638846218585968,.5802854895591736,1],[.6019799709320068,.6073563694953918,.807461678981781,1],[.5944148898124695,.7527848482131958,.520584225654602,1],[.8126696348190308,.5513396859169006,.7106873989105225,1],[.5918391346931458,.7710464000701904,.7906153798103333,1],[.7648254632949829,.7191355228424072,.5285170674324036,1],[.6757139563560486,.5736276507377625,.7719092965126038,1],[.5477100014686584,.784534752368927,.6005358695983887,1],[.750145435333252,.5404607057571411,.5548738241195679,1],[.5506091117858887,.6321061849594116,.7766551971435547,1],[.7142684459686279,.7983494400978088,.5565086007118225,1],[.6019799709320068,.5404607057571411,.768614649772644,1],[.5555555555555555,.5555555555555555,.5555555555555555,1]],f={paletteDefault:b,hexToRGB(c){const e=parseInt(c.slice(1,3),16)/255,t=parseInt(c.slice(3,5),16)/255,s=parseInt(c.slice(5,7),16)/255;return[e,t,s,1]},RGBtoHex(c,e,t){const s=i=>Math.round(i*255).toString(16).padStart(2,"0"),a=s(c),n=s(e),o=s(t);return`#${a}${n}${o}`},batchConvertColorHexToRGB(c){for(const e of c)e.color=this.hexToRGB(e.color)},batchAssignColor(c){let e=0;for(const t of c)t.color=this.paletteDefault[e],e+2<this.paletteDefault.length?e++:e=0}},u="/";class P{constructor(){r(this,"id","");r(this,"name","");r(this,"ratio",0);r(this,"resolution","");r(this,"assetTypes",[]);r(this,"taskTypes",[]);r(this,"taskStatuses",[]);r(this,"team",[]);r(this,"thumbnailUrl","");r(this,"sequences",[]);r(this,"shots",[]);r(this,"assets",[]);r(this,"totalFrames",1);r(this,"frameOffset",0);r(this,"fps",24);r(this,"videoPlayerSources",[]);r(this,"episodes",[])}}class S{constructor(){r(this,"data",y(new P))}getEpisodeSequences(e){const t=this.data.episodes.find(s=>s.id===e);return t?t.sequences:[]}async fetchProjectData(e){try{const t=await d.get(h.getUrl(h.urlType.Project,e));this.data.id=t.data.id,this.data.name=t.data.name,this.data.ratio=t.data.ratio,this.data.resolution=t.data.resolution,this.data.thumbnailUrl=t.data.thumbnailUrl,this.data.fps=t.data.fps,f.batchAssignColor(t.data.asset_types),this.data.assetTypes=t.data.asset_types,f.batchConvertColorHexToRGB(t.data.task_types),this.data.taskTypes=t.data.task_types,f.batchConvertColorHexToRGB(t.data.task_statuses),this.data.taskStatuses=t.data.task_statuses;const s=t.data.team;if(s.length>0){const a=[];for(const n of s){const o={name:n.full_name,id:n.id,profilePicture:`${u}static/img/placeholder-user.png`,color:void 0};n.has_avatar&&(o.profilePicture=`${u}${n.thumbnailUrl}`),a.push(o)}f.batchAssignColor(a),this.data.team=a}t.data.episodes.length>0&&(this.data.episodes=t.data.episodes)}catch(t){console.log(t)}}async fetchProjectSequences(e,t){try{const s=h.getUrl(h.urlType.Sequences,e),a=await d.get(s),n=a.data;let o=a.data;if(t){const i=this.getEpisodeSequences(t);o=n.filter(l=>i.some(p=>p.id===l.id))}o.forEach((i,l)=>{i.color=f.paletteDefault[l%f.paletteDefault.length]}),this.data.sequences=o}catch(s){console.log(s)}}async fetchProjectShots(e,t){try{const s=h.getUrl(h.urlType.Shots,e),a=await d.get(s),n=a.data;let o=a.data;if(t){const i=this.getEpisodeSequences(t);o=n.filter(l=>i.some(p=>p.id===l.sequence_id))}for(const i of o){if(!i.thumbnailUrl)i.thumbnailUrl=`${u}static/img/placeholder-asset.png`;else{const l="/";i.thumbnailUrl=`${l}${i.thumbnailUrl}`}i.asset_ids=[]}this.data.shots=o,this.data.shots.sort((i,l)=>i.startFrame>l.startFrame?1:-1)}catch(s){console.log(s)}}async fetchProjectCasting(e){try{const t=await d.get(h.getUrl(h.urlType.Casting,e));for(const s of this.data.shots){const a=t.data.find(n=>n.shot_id===s.id);a!==void 0&&(s.asset_ids=a.asset_ids)}for(const s of this.data.assets)s.shot_ids=t.data.filter(a=>{a.asset_ids&&a.asset_ids.includes(s.id)}).map(a=>a.shot_id)}catch(t){console.log(t)}}async fetchEditData(e,t){const s=`${u}data/projects/${e}/edits.json`,n=(await d.get(s)).data;let o={id:"",totalFrames:0,sourceName:"",sourceType:"video/mp4",episodeId:"",frameOffset:0};if(t){const i=n.find(l=>l.episodeId===t);i!=null&&(o=i)}else o=n[0];this.data.totalFrames=o.totalFrames,this.data.frameOffset=o.frameOffset,this.data.videoPlayerSources=[{src:`${u}${o.sourceName}`,type:o.sourceType}]}async fetchProjectAssets(e){try{const t=await d.get(h.getUrl(h.urlType.Assets,e));for(const s of t.data){if(s.thumbnailUrl===null)s.thumbnailUrl=`${u}static/img/placeholder-asset.png`;else{const a="/";s.thumbnailUrl=`${a}${s.thumbnailUrl}`}s.shot_ids=[]}this.data.assets=t.data}catch(t){console.log(t)}}async initWithProject(e,t){try{await this.fetchProjectData(e),await this.fetchProjectShots(e,t),await this.fetchProjectAssets(e),await this.fetchProjectSequences(e,t),await this.fetchProjectCasting(e),await this.fetchEditData(e,t)}catch(s){console.log(s)}}}export{f as c,S as u};
