# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
    paths:
        - .cache/pip

# before_script:
#     - python --version ; pip --version # For debugging
#     # - pip install virtualenv
#     # - virtualenv venv
#     # - source venv/bin/activate

build:
    stage: build
    script:
        - python --version ; pip --version # For debugging
        - pip install build
        - python -m build
    artifacts:
        paths:
            - dist/
# pages:
#     stage: build
#     script:
#         - pip install sphinx sphinx-rtd-theme
#         - cd doc
#         - make html
#         - mv build/html/ ../public/
#     artifacts:
#         paths:
#             - public
#     rules:
#         - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# test:
#     stage: test
#     script:
#         - pip install ruff tox # you can also use tox
#         - pip install --editable ".[test]"
#         - tox -e py,ruff

test-version-consistency:
    stage: test
    image: debian:stable-slim
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - test "$CI_COMMIT_TAG"  = v"$(sed -n 's/^ *version *= *"\(.*\)" *$/\1/p' pyproject.toml)"

publish:
    stage: deploy
    rules:
        - if: $CI_COMMIT_TAG
    id_tokens:
        PYPI_ID_TOKEN:
            # Use "testpypi" if uploading to TestPyPI
            aud: pypi
    script:
        - python --version; pip --version
        # Install dependencies
        - apt-get -qq update && apt-get -qq install -y jq
        - pip install twine id

        # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
        - oidc_token=$(python -m id PYPI)
        # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
        - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
        - api_token=$(jq --raw-output '.token' <<< "${resp}")

        # Upload to PyPI authenticating via the newly-minted token
        # Add "--repository testpypi" if uploading to TestPyPI
        - twine upload -u __token__ -p "${api_token}" dist/*

release:
    stage: deploy
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - echo "running release_job"
    release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
        tag_name: "$CI_COMMIT_TAG"
        description: "$CI_COMMIT_TAG"
