(()=>{"use strict";let t=0;function e(t){return""===t||"0"===t||0===t||null==t||null==t}const n={};function o(t,e=null,o=null){return o||(o={}),function(t,e){return t&&t.hasAttribute("pattern")}(t)?function(t,e){let o=t.getAttribute("pattern");if(o in n)return n[o];const i=new RegExp(o,"i");return n[o]=i,i}(t).test(e||t.value)?(t.classList.remove(o.pattern||"is-invalid-pattern"),!0):(t.classList.add(o.pattern||"is-invalid-pattern"),!1):function(t){return t&&t.hasAttribute("min")}(t)?function(t,e){let n=t.getAttribute("min");return!n||parseFloat(e)>=parseFloat(n)}(t,e||t.value)?(t.classList.remove(o.min||"is-invalid-min"),!0):(t.classList.add(o.min||"is-invalid-min"),!1):!function(t){return t&&t.hasAttribute("max")}(t)||(function(t,e){let n=t.getAttribute("max");return!n||parseFloat(e)<=parseFloat(n)}(t,e||t.value)?(t.classList.remove(o.max||"is-invalid-max"),!0):(t.classList.add(o.max||"is-invalid-max"),!1))}var i=function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{d(o.next(t))}catch(t){r(t)}}function a(t){try{d(o.throw(t))}catch(t){r(t)}}function d(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}d((o=o.apply(t,e||[])).next())}))};const r={empty:"is-empty",invalid:"is-invalid",pattern:"is-invalid-pattern",min:"is-invalid-min",max:"is-invalid-max"},s=Object.values(r);function a(e,n,o){return i(this,void 0,void 0,(function*(){if(e=null==e?void 0:e.trim(),n=null==n?void 0:n.trim(),!e)throw new Error("No postcode provided");if(!n)throw new Error("No home number provided");let i=o.buildRequest||function(t,e){let n=function(t){return t.startsWith("http")||(t.startsWith("/")&&(t=t.slice(1)),t=`${window.location.origin}/${t}`),new URL(t)}(d);return n.searchParams.append("postcode",t),n.searchParams.append("home_number",e.toString()),{input:n,init:{method:"GET",headers:{"Content-Type":"application/json"}}}};const{input:r,init:s}=i(e,n),a=yield function(e,n){const o=fetch(e,n),i=Date.now();return t=i,new Promise(((e,n)=>{o.then((o=>{t===i&&(o.ok?e(o):n(o))})).catch(n)}))}(r,s);let c;try{c=yield a.json()}catch(t){throw new Error("Failed to parse response from postcode lookup service")}if(!("success"in c))throw new Error('Invalid response from postcode lookup service, missing "success" field');if(!c.success)throw c.error?new Error(c.error):new Error("Failed to fetch postcode data");if(!("data"in c))throw new Error('Invalid response from postcode lookup service, missing "data" field');const l=c.data;return o.success&&o.success(l),l}))}const d=document.currentScript.dataset.apiUrl;if(!d)throw new Error("No API URL provided, cannot initialize postcode lookup module");console.log("Postcode lookup module initialized with API URL:",d),window.lookupPostcode=function(t){return i(this,void 0,void 0,(function*(){let n=t.postcode,i=t.home_number;if(t&&t.bind&&t.bind.postcode&&t.bind.home_number){const d=t.bind.postcode,c=t.bind.home_number;delete t.bind.postcode,delete t.bind.home_number;const l=Object.keys(t.bind);if(0==l.length)throw new Error("At least postcode, home_number and one other field must be bound");const u=t.bind,m=()=>{if(!n&&!i){for(let t=0;t<s.length;t++){const e=s[t];d.classList.remove(e),c.classList.remove(e)}for(const t of l){const e=u[t];e&&(e.value="")}return!0}return!1},p=t=>{d.classList.remove(r.invalid),c.classList.remove(r.invalid);for(const o of l){const a=u[o];if(a){const d=t[o];for(const t of s)a.classList.remove(t);e(d)||!n&&!i?a.classList.add(r.empty):(a.classList.remove(r.empty),a.value=d.toString())}}},v=e=>{t&&t.error&&t.error(e),d.classList.add(r.invalid),c.classList.add(r.invalid)},h=e=>(e.classList.add("postcodes-input"),()=>{n=d.value,i=c.value,m()||o(e,null,r)&&a(n,i,t).then(p).catch(v)}),f=()=>{for(let t=0;t<l.length;t++){const e=l[t],n=u[e];n&&(n.classList.add("postcodes-input"),n.addEventListener("change",(()=>o(n,null,r))))}d.addEventListener("input",h(d)),c.addEventListener("input",h(c))};"complete"===document.readyState||"interactive"===document.readyState?f():document.addEventListener("DOMContentLoaded",f)}else{if(t&&t.bind&&(!t.bind.postcode||!t.bind.home_number))throw new Error("Both postcode and home_number must be bound to use the bind option");try{return yield a(n,i,t)}catch(e){throw t&&t.error&&t.error(e),e}}}))}})();