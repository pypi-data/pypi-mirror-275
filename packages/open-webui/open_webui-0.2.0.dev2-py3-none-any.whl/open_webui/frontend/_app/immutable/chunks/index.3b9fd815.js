import{v as c}from"./index.dca233de.js";import{o as s}from"./index.9a95918f.js";const l=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${o}`},body:JSON.stringify({chat:e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},u=async(o="")=>{let e=null;const a=await fetch(`${c}/chats/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a.map(n=>({...n,time_range:s(n.updated_at)}))},p=async(o="",e)=>{let a=null;const n=await fetch(`${c}/chats/list/user/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n.map(t=>({...t,time_range:s(t.updated_at)}))},w=async(o="")=>{let e=null;const a=await fetch(`${c}/chats/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},y=async o=>{let e=null;const a=await fetch(`${c}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},j=async o=>{let e=null;const a=await fetch(`${c}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},d=async o=>{let e=null;const a=await fetch(`${c}/chats/tags/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},f=async(o="",e)=>{let a=null;const n=await fetch(`${c}/chats/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({name:e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n.map(t=>({...t,time_range:s(t.updated_at)}))},g=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},$=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/share/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},T=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/${e}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},C=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/${e}/archive`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},m=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/${e}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},B=async(o,e,a)=>{let n=null;const t=await fetch(`${c}/chats/${e}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({chat:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.log(r),null));if(n)throw n;return t},A=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/${e}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return n},E=async(o,e)=>{let a=null;const n=await fetch(`${c}/chats/${e}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},z=async(o,e,a)=>{let n=null;const t=await fetch(`${c}/chats/${e}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({tag_name:a,chat_id:e})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.log(r),null));if(n)throw n;return t},S=async(o,e,a)=>{let n=null;const t=await fetch(`${c}/chats/${e}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({tag_name:a,chat_id:e})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.log(r),null));if(n)throw n;return t},I=async o=>{let e=null;const a=await fetch(`${c}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return a},_=async o=>{let e=null;const a=await fetch(`${c}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return a};export{_ as a,u as b,l as c,I as d,w as e,C as f,y as g,A as h,g as i,f as j,d as k,j as l,p as m,E as n,z as o,S as p,m as q,$ as r,T as s,B as u};
//# sourceMappingURL=index.3b9fd815.js.map
