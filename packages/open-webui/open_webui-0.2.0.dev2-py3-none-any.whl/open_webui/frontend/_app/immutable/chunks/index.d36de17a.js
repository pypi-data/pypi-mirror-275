import{a as i}from"./index.dca233de.js";const h=async(n="")=>{let e=null;const t=await fetch(`${i}/api/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...n&&{authorization:`Bearer ${n}`}}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),e=a,null));if(e)throw e;let o=(t==null?void 0:t.data)??[];return o=o.filter(a=>a).sort((a,r)=>{const l=a.name.toLowerCase(),s=r.name.toLowerCase();return l<s?-1:l>s?1:a<r?-1:a>r?1:0}),console.log(o),o},u=async()=>{let n=null;const e=await fetch(`${i}/api/config`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t,null));if(n)throw n;return e},f=async()=>{let n=null;const e=await fetch(`${i}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t,null));if(n)throw n;return e},p=async()=>{let n=null;const e=await fetch(`${i}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t,null));if(n)throw n;return e},w=async n=>{let e=null;const t=await fetch(`${i}/api/config/model/filter`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return t},d=async(n,e,t)=>{let o=null;const a=await fetch(`${i}/api/config/model/filter`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({enabled:e,models:t})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),o=r,null));if(o)throw o;return a},g=async n=>{let e=null;const t=await fetch(`${i}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return t.url},y=async(n,e)=>{let t=null;const o=await fetch(`${i}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({url:e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),t=a,null));if(t)throw t;return o.url};export{p as a,h as b,f as c,g as d,w as e,d as f,u as g,y as u};
//# sourceMappingURL=index.d36de17a.js.map
