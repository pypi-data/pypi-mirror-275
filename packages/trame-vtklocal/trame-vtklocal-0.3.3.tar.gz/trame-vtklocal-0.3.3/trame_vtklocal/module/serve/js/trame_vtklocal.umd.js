(function(u,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],r):(u=typeof globalThis<"u"?globalThis:u||self,r(u.trame_vtklocal={},u.Vue))})(this,function(u,r){"use strict";async function O(s,c){const d={canvas:s,locateFile(){return c},print(){console.info(Array.prototype.slice.call(arguments).join(" "))},printErr(){console.error(Array.prototype.slice.call(arguments).join(" "))}},p=await window.createVTKWasmSceneManager(d);return p.initialize(),p}const j={VtkLocal:{emits:["updated","memory-vtk","memory-arrays"],props:{renderWindow:{type:Number},eagerSync:{type:Boolean,default:!1},cacheSize:{type:Number,default:1e8},wsClient:{type:Object}},setup(s,{emit:c}){const d=r.inject("trame"),p=d.state.get("__trame_vtklocal_wasm_url"),T=r.ref(null),v=r.ref(null),y=s.wsClient||(d==null?void 0:d.client),S={},g={},M={},m=r.ref(1);let n=null,w=0,b=null;function R([e]){if(e.type==="state"){const{mtime:i,content:o,id:t}=e;n.unRegisterState(t),n.registerState(o),S[t]=i}if(e.type==="blob"){const{hash:i,content:o}=e;M[i]=new Promise(t=>{o.arrayBuffer?o.arrayBuffer().then(a=>{n.registerBlob(i,new Uint8Array(a)),t()}):(n.registerBlob(i,o),t())})}}async function E(){const e=y.getConnection().getSession();b=e.subscribe("vtklocal.subscriptions",R),await e.call("vtklocal.subscribe.update",[s.renderWindow,1])}async function U(){const e=y.getConnection().getSession();b&&(e.unsubscribe(b),b=null),await e.call("vtklocal.subscribe.update",[s.renderWindow,-1])}function k(){const{width:e,height:i}=T.value.getBoundingClientRect(),o=Math.floor(e*window.devicePixelRatio+.5),t=Math.floor(i*window.devicePixelRatio+.5),a=r.unref(v);a&&n&&s.renderWindow&&(a.width=o,a.height=t,n.setSize(s.renderWindow,o,t),n.render(s.renderWindow))}let h=new ResizeObserver(k);async function z(e){const o=await y.getConnection().getSession().call("vtklocal.get.state",[e]);return o.length>0?(S[e]=JSON.parse(o).MTime,n.unRegisterState(e),n.registerState(o)):console.log(`Server returned empty state for ${e}`),o}async function A(e){if(M[e]){await M[e],g[e]=r.unref(m),delete M[e];return}const o=await y.getConnection().getSession().call("vtklocal.get.hash",[e]),t=o.arrayBuffer?new Uint8Array(await o.arrayBuffer()):o;return n.registerBlob(e,t),g[e]=r.unref(m),t}function V(){const e=n.getTotalVTKDataObjectMemoryUsage(),i=n.getTotalBlobMemoryUsage(),o=Number(s.cacheSize)+e;if(i>o){const t={};let a=r.unref(m);for(Object.entries(g).forEach(([f,l])=>{l<a&&(a=l);const W=l.toString();t[W]?t[W].push(f):t[W]=[f]});n.getTotalBlobMemoryUsage()>o;){const f=t[a];if(f)for(let l=0;l<f.length;l++)n.unRegisterBlob(f[l]),delete g[f[l]];a++}}c("memory-vtk",n.getTotalVTKDataObjectMemoryUsage()),c("memory-arrays",n.getTotalBlobMemoryUsage())}async function B(){if(w++,w===1)try{const i=await y.getConnection().getSession().call("vtklocal.get.status",[s.renderWindow]),o=[];i.ids.forEach(([t,a])=>{(!S[t]||S[t]<a)&&o.push(z(t))}),i.ignore_ids.forEach(t=>{n.unRegisterState(t)}),i.hashes.forEach(t=>{g[t]||o.push(A(t)),g[t]=r.unref(m)}),await Promise.all(o),m.value++;try{n.updateObjectsFromStates(),n.render(s.renderWindow),k()}catch(t){console.error("WASM update failed"),console.log(t)}c("updated"),V()}catch(e){console.error("Error in update",e)}finally{w--,w&&(w=0,await B())}}function _(e){n.resetCamera(e),n.render(s.renderWindow)}return r.onMounted(async()=>{n=await O(r.unref(v),p),s.eagerSync&&E(),await B(),n.startEventLoop(s.renderWindow),h&&h.observe(r.unref(T))}),r.onBeforeUnmount(()=>{b&&U(),n.stopEventLoop(s.renderWindow),h&&(h.disconnect(),h=null)}),{container:T,canvas:v,update:B,resetCamera:_}},template:`
        <div ref="container" style="position: relative; width: 100%; height: 100%;">
          <canvas 
            id="canvas"
            ref="canvas" 
            style="position: absolute; left: 0; top: 0; width: 100%; height: 100%;" 
            tabindex="0"
            
            @contextmenu.prevent
            @click="canvas.focus()"
            @mouseenter="canvas.focus()"
          />
        </div>`}};function C(s){Object.keys(j).forEach(c=>{s.component(c,j[c])})}u.install=C,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
