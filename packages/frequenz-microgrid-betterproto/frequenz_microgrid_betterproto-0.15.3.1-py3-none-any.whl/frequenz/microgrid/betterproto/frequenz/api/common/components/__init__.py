# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: frequenz/api/common/components.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass

import betterproto


class ComponentCategory(betterproto.Enum):
    """Enumrated component categories."""

    COMPONENT_CATEGORY_UNSPECIFIED = 0
    """
    An unknown component categories, useful for error handling, and marking
    unknown components in a list of components with otherwise known categories.
    """

    COMPONENT_CATEGORY_GRID = 1
    """The point where the local microgrid is connected to the grid."""

    COMPONENT_CATEGORY_METER = 2
    """
    A meter, for measuring electrical metrics, e.g., current, voltage, etc.
    """

    COMPONENT_CATEGORY_INVERTER = 3
    """An electricity generator, with batteries or solar energy."""

    COMPONENT_CATEGORY_CONVERTER = 4
    """A DC-DC converter."""

    COMPONENT_CATEGORY_BATTERY = 5
    """A storage system for electrical energy, used by inverters."""

    COMPONENT_CATEGORY_EV_CHARGER = 6
    """A station for charging electrical vehicles."""

    COMPONENT_CATEGORY_SENSOR = 7
    """
    A sensor for measuring ambient metrics, e.g., temperature, humidity, etc.
    """

    COMPONENT_CATEGORY_CRYPTO_MINER = 8
    """A crypto miner."""

    COMPONENT_CATEGORY_ELECTROLYZER = 9
    """An electrolyzer for converting water into hydrogen and oxygen."""

    COMPONENT_CATEGORY_CHP = 10
    """
    A heat and power combustion plant (CHP stands for combined heat and power).
    """

    COMPONENT_CATEGORY_RELAY = 11
    """
    A relay. Relays generally have two states: open (connected) and closed
    (disconnected). They are generally placed in front of a component, e.g., an
    inverter, to control whether the component is connected to the grid or not.
    """

    COMPONENT_CATEGORY_PRECHARGE_MODULE = 12
    """
    A precharge module. Precharging involves gradually ramping up the DC
    voltage to prevent any potential damage to sensitive electrical components
    like capacitors. While many inverters and batteries come equipped with in-
    built precharging mechanisms, some may lack this feature. In such cases, we
    need to use external precharging modules.
    """


class BatteryType(betterproto.Enum):
    """Enumerated battery types."""

    BATTERY_TYPE_UNSPECIFIED = 0
    """Unspecified."""

    BATTERY_TYPE_LI_ION = 1
    """Li-ion batteries."""

    BATTERY_TYPE_NA_ION = 2
    """Sodium-ion batteries"""


class InverterType(betterproto.Enum):
    """Enumerated inverter types."""

    INVERTER_TYPE_UNSPECIFIED = 0
    """Unspecified."""

    INVERTER_TYPE_BATTERY = 1
    """Battery inverter."""

    INVERTER_TYPE_SOLAR = 2
    """Solar inverter."""

    INVERTER_TYPE_HYBRID = 3
    """Hybrid inverter."""


class EvChargerType(betterproto.Enum):
    """Enumerated EV charger types."""

    EV_CHARGER_TYPE_UNSPECIFIED = 0
    """Default type."""

    EV_CHARGER_TYPE_AC = 1
    """The EV charging station supports AC charging only."""

    EV_CHARGER_TYPE_DC = 2
    """The EV charging station supports DC charging only."""

    EV_CHARGER_TYPE_HYBRID = 3
    """The EV charging station supports both AC and DC."""


class SensorType(betterproto.Enum):
    """Enumerated sensor types."""

    SENSOR_TYPE_UNSPECIFIED = 0
    """Unspecified"""

    SENSOR_TYPE_THERMOMETER = 1
    """Thermometer (temperature sensor)"""

    SENSOR_TYPE_HYGROMETER = 2
    """Hygrometer (humidity sensor)"""

    SENSOR_TYPE_BAROMETER = 3
    """Barometer (pressure sensor)."""

    SENSOR_TYPE_PYRANOMETER = 4
    """Pyranometer (solar irradiance sensor)."""

    SENSOR_TYPE_ANEMOMETER = 5
    """Anemometer (wind velocity and direction sensor)."""

    SENSOR_TYPE_ACCELEROMETER = 6
    """Accelerometers (acceleration sensor)."""

    SENSOR_TYPE_GENERAL = 7
    """General sensors, which do not fall in any of the above categories"""
