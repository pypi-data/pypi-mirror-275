# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: frequenz/api/microgrid/battery.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from ...common import (
    components as __common_components__,
    metrics as __common_metrics__,
)
from ...common.metrics import electrical as __common_metrics_electrical__
from .. import common as _common__


class ComponentState(betterproto.Enum):
    COMPONENT_STATE_UNSPECIFIED = 0
    """
    Default value. This value is used only when the state information is not
    available.
    """

    COMPONENT_STATE_OFF = 1
    """The battery is switched off."""

    COMPONENT_STATE_IDLE = 2
    """The battery is idle."""

    COMPONENT_STATE_CHARGING = 3
    """The battery is consuming electrical energy."""

    COMPONENT_STATE_DISCHARGING = 4
    """The battery is generating electrical energy."""

    COMPONENT_STATE_ERROR = 5
    """The battery is in a faulty state."""

    COMPONENT_STATE_LOCKED = 6
    """
    The battery is online, but currently unavailable, possibly due to a pre-
    scheduled maintenance, or waiting for a resource to be loaded.
    """

    COMPONENT_STATE_SWITCHING_ON = 7
    """
    The battery is starting up and needs some time to become fully operational.
    """

    COMPONENT_STATE_SWITCHING_OFF = 8
    """The battery is switching off and needs some time to fully shut down."""

    COMPONENT_STATE_UNKNOWN = 9
    """
    The state is provided by the device, but it can not be parsed as any of the
    above (known) states.
    """


class RelayState(betterproto.Enum):
    RELAY_STATE_UNSPECIFIED = 0
    """Default value."""

    RELAY_STATE_OPENED = 1
    """
    The relays are open, and the DC power line to the inverter is disconnected.
    """

    RELAY_STATE_PRECHARGING = 2
    """
    The relays are closing, and the DC power line to the inverter is being
    connected.
    """

    RELAY_STATE_CLOSED = 3
    """
    The relays are closed, and the DC power line to the inverter is connected.
    """

    RELAY_STATE_ERROR = 4
    """The relays are in an error state."""

    RELAY_STATE_LOCKED = 5
    """
    The relays are locked, and should be available to accept commands shortly.
    """


class ErrorCode(betterproto.Enum):
    """Enumerated Battery/BMS error codes."""

    ERROR_CODE_UNSPECIFIED = 0
    """Unspecified."""

    ERROR_CODE_HIGH_CURRENT_CHARGE = 1
    """Charge current is too high."""

    ERROR_CODE_HIGH_CURRENT_DISCHARGE = 2
    """Discharge current is too high."""

    ERROR_CODE_HIGH_VOLTAGE = 3
    """Voltage is too high."""

    ERROR_CODE_LOW_VOLTAGE = 4
    """Voltage is too low."""

    ERROR_CODE_HIGH_TEMPERATURE = 5
    """Temperature is too high."""

    ERROR_CODE_LOW_TEMPERATURE = 6
    """Temperature is too low."""

    ERROR_CODE_HIGH_HUMIDITY = 7
    """Humidity is too high."""

    ERROR_CODE_EXCEEDED_SOP_CHARGE = 8
    """Charge current has exceeded component bounds."""

    ERROR_CODE_EXCEEDED_SOP_DISCHARGE = 9
    """Discharge current has exceeded component bounds."""

    ERROR_CODE_SYSTEM_IMBALANCE = 10
    """The battery blocks are not balanced with respect to each other."""

    ERROR_CODE_LOW_SOH = 11
    """The State of health is low."""

    ERROR_CODE_BLOCK_ERROR = 12
    """One or more battery blocks have failed."""

    ERROR_CODE_CONTROLLER_ERROR = 13
    """The battery controller has failed."""

    ERROR_CODE_RELAY_ERROR = 14
    """The battery's DC relays have failed."""

    ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED = 15
    """
    The battery's DC relays have been cycled for the maximum number of times
    mentioned in their lifetime specifications.
    """

    ERROR_CODE_FUSE_ERROR = 16
    """The battery's fuse has failed."""

    ERROR_CODE_EXTERNAL_POWER_SWITCH_ERROR = 17
    """The eternal power switch has failed."""

    ERROR_CODE_PRECHARGE_ERROR = 18
    """The precharge operation has failed."""

    ERROR_CODE_SYSTEM_PLAUSIBILITY_ERROR = 19
    """System plausibility checks have failed."""

    ERROR_CODE_SYSTEM_UNDERVOLTAGE_SHUTDOWN = 20
    """System shut down due to extremely low voltage."""

    ERROR_CODE_CALIBRATION_NEEDED = 21
    """The battery requires a calibration to reset its measurements."""


@dataclass(eq=False, repr=False)
class Metadata(betterproto.Message):
    """The battery metadata."""

    type: "__common_components__.BatteryType" = betterproto.enum_field(1)
    """The battery type."""


@dataclass(eq=False, repr=False)
class State(betterproto.Message):
    """State message."""

    component_state: "ComponentState" = betterproto.enum_field(1)
    """The state of the overall component."""

    relay_state: "RelayState" = betterproto.enum_field(2)
    """The state of the DC relays."""


@dataclass(eq=False, repr=False)
class Error(betterproto.Message):
    """Error message."""

    code: "ErrorCode" = betterproto.enum_field(1)
    """The error code."""

    level: "_common__.ErrorLevel" = betterproto.enum_field(2)
    """The error severity level."""

    msg: str = betterproto.string_field(3)
    """The error message."""


@dataclass(eq=False, repr=False)
class Data(betterproto.Message):
    """Battery data."""

    dc: "__common_metrics_electrical__.Dc" = betterproto.message_field(1)
    """DC electricity metrics."""

    soc: "__common_metrics__.MetricAggregation" = betterproto.message_field(2)
    """Battery's overall SoC. In percent (%)."""

    temperature: "__common_metrics__.MetricAggregation" = betterproto.message_field(3)
    """
    The aggregated values of all the temperature measurements of a battery. In
    degree Celsius (Â°C).
    """

    humidity: "__common_metrics__.MetricAggregation" = betterproto.message_field(4)
    """
    The aggregated values of all the humidity measurements of a battery. In
    percent (%).
    """


@dataclass(eq=False, repr=False)
class Properties(betterproto.Message):
    """Battery properties."""

    firmware_ver: str = betterproto.string_field(1)
    """The firmware version of the battery."""

    capacity: float = betterproto.float_field(2)
    """The capacity of the battery. In Watt-hour (Wh)."""


@dataclass(eq=False, repr=False)
class Battery(betterproto.Message):
    """Battery/BMS details"""

    properties: "Properties" = betterproto.message_field(1)
    """The component properties"""

    state: "State" = betterproto.message_field(2)
    """The battery state."""

    errors: List["Error"] = betterproto.message_field(3)
    """
    A list of errors encountered the component. An empty list implies no error.
    """

    data: "Data" = betterproto.message_field(4)
    """A Battery data object."""
