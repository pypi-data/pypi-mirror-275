# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: frequenz/api/microgrid/ev_charger.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from ...common import (
    components as __common_components__,
    metrics as __common_metrics__,
)
from ...common.metrics import electrical as __common_metrics_electrical__
from .. import common as _common__


class ComponentState(betterproto.Enum):
    """The possible states of an EV charging station."""

    COMPONENT_STATE_UNSPECIFIED = 0
    """
    Default state. This value is used only when the state information is not
    available.
    """

    COMPONENT_STATE_STARTING = 1
    """The EV charging station is starting up."""

    COMPONENT_STATE_NOT_READY = 2
    """The EV charging station is unplugged or RFID is not working."""

    COMPONENT_STATE_READY = 3
    """The EV charging station is ready and waiting for a charging request"""

    COMPONENT_STATE_CHARGING = 4
    """The EV charging station is charging an EV."""

    COMPONENT_STATE_DISCHARGING = 5
    """
    The EV charging station is discharging from an EV into the local microgrid.
    """

    COMPONENT_STATE_ERROR = 6
    """The EV charging station is in an error state."""

    COMPONENT_STATE_AUTHORIZATION_REJECTED = 7
    """The EV charging station rejected the last authorization."""

    COMPONENT_STATE_INTERRUPTED = 8
    """The EV charging process hes been temporarily interrupted."""

    COMPONENT_STATE_UNKNOWN = 9
    """
    The state is provided by the device, but it can not be parsed as any of the
    above (known) states.
    """


class CableState(betterproto.Enum):
    """
    The possible states of the cable connecting an EV charging station and an
    EV.
    """

    CABLE_STATE_UNSPECIFIED = 0
    """Default state."""

    CABLE_STATE_UNPLUGGED = 1
    """No cable is connected to the EV charging station."""

    CABLE_STATE_CHARGING_STATION_PLUGGED = 2
    """
    A cable is connected to the EV charging station, but is not locked with it.
    """

    CABLE_STATE_CHARGING_STATION_LOCKED = 3
    """A cable is connected to and locked with the EV charging station."""

    CABLE_STATE_EV_PLUGGED = 4
    """
    A cable is connected to and locked with the EV charging station. The same
    cable is connected to the EV, but is not locked with it.
    """

    CABLE_STATE_EV_LOCKED = 5
    """
    A cable is connected to and locked with the EV charging station. The same
    cable is connected to and locked with the EV.
    """


class ErrorCode(betterproto.Enum):
    """Enumerated EV charger error codes."""

    ERROR_CODE_UNSPECIFIED = 0
    """Unspecified."""

    ERROR_CODE_SWITCH_ON_FAULT = 1
    """Something is preventing the DC contactor from being switched on."""

    ERROR_CODE_UNDERVOLTAGE = 2
    """AC supply voltage is lower than expected."""

    ERROR_CODE_OVERVOLTAGE = 3
    """AC supply voltage is higher than expected."""

    ERROR_CODE_OVERCURRENT = 4
    """DC charging voltage is higher than expected."""

    ERROR_CODE_OVERTEMPERATURE = 5
    """Temperature in the charging station is higher than expected."""

    ERROR_CODE_UNEXPECTED_PILOT_FAILURE = 6
    """EV has sent an unexpected pilot signal."""

    ERROR_CODE_FAULT_CURRENT = 7
    """A fault current has been detected."""

    ERROR_CODE_SHORT_CIRCUIT = 8
    """A short circuit has been detected."""

    ERROR_CODE_CONFIG_ERROR = 9
    """The system is incorrectly configured."""

    ERROR_CODE_ILLEGAL_COMPONENT_STATE_REQUESTED = 10
    """The system received a request to move to an illegal state."""

    ERROR_CODE_HARDWARE_INACCESSIBLE = 11
    """The system cannot access the internal hardware."""

    ERROR_CODE_INTERNAL = 12
    """The system has detected an unspecified internal error."""

    ERROR_CODE_CABLE_LOST = 13
    """The charging cable was unplugged unexpectedly."""

    ERROR_CODE_CABLE_LOCK_FAILED = 14
    """The charging cable could not be locked."""

    ERROR_CODE_CABLE_INVALID = 15
    """The charging cable could not be locked."""

    ERROR_CODE_PLUG_UNKNOWN = 16
    """The charging cable has an unrecognised plug."""

    ERROR_CODE_CONSUMER_NON_STANDARD = 17
    """The connected consumer is not a standard-compliant EV."""


@dataclass(eq=False, repr=False)
class Metadata(betterproto.Message):
    """The EV charger metadata."""

    type: "__common_components__.EvChargerType" = betterproto.enum_field(1)
    """The EV charger type."""


@dataclass(eq=False, repr=False)
class State(betterproto.Message):
    """State message."""

    component_state: "ComponentState" = betterproto.enum_field(1)
    """The state of the overall component."""

    cable_state: "CableState" = betterproto.enum_field(2)
    """The state of the charging cable."""


@dataclass(eq=False, repr=False)
class Error(betterproto.Message):
    """Error message."""

    code: "ErrorCode" = betterproto.enum_field(1)
    """The error code."""

    level: "_common__.ErrorLevel" = betterproto.enum_field(2)
    """The error severity level."""

    msg: str = betterproto.string_field(3)
    """The error message."""


@dataclass(eq=False, repr=False)
class Data(betterproto.Message):
    """EV charger data."""

    dc: "__common_metrics_electrical__.Dc" = betterproto.message_field(1)
    """
    DC metrics of the EV charging station. Contains data only if DC charging is
    supported by the EV charging station. (in which case, the type of the EV
    charging station is TYPE_DC or TYPE_HYBRID)
    """

    ac: "__common_metrics_electrical__.Ac" = betterproto.message_field(2)
    """
    AC metrics of the EV charging station. Contains data only if AC charging is
    supported by the EV charging station. (in which case, the type of the EV
    charging station is TYPE_AC or TYPE_HYBRID)
    """

    temperature: "__common_metrics__.Metric" = betterproto.message_field(3)
    """The overall temperature of the EV charger. In degree Celsius (Â°C)."""


@dataclass(eq=False, repr=False)
class Properties(betterproto.Message):
    """EV charger properties."""

    firmware_ver: str = betterproto.string_field(1)
    """The firmware version of the component."""


@dataclass(eq=False, repr=False)
class EvCharger(betterproto.Message):
    """EvCharger details"""

    properties: "Properties" = betterproto.message_field(1)
    """The component properties"""

    state: "State" = betterproto.message_field(2)
    """The EV charging station's state."""

    errors: List["Error"] = betterproto.message_field(3)
    """
    A list of errors encountered the component. An empty list implies no error.
    """

    data: "Data" = betterproto.message_field(4)
    """An EV charger data object."""
