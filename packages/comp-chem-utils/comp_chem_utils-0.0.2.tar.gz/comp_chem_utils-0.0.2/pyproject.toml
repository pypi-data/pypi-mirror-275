[tool.poetry]
name = "comp-chem-utils"
version = "0.0.2"
description = "Utilities for computational chemistry."
authors = [
    "Ugochukwu Nwosu <ugognw@gmail.com>",
    "Tiago Joao Ferreira Goncalves <tiagojoaog@gmail.com>"
]
license = "MIT"
readme = "README.rst"
repository = "https://gitlab.com/ugognw/python-comp-chem-utils"
documentation = "https://python-comp-chem-utils.readthedocs.io/"
keywords = ['computational chemistry', 'catalysis', 'comp-chem-utils']
packages = [
    { include = "ccu", from = "src" }
]
classifiers = [
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "Operating System :: Unix",
        "Operating System :: POSIX",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: MIT License",
        "Topic :: Scientific/Engineering :: Chemistry",
        "Topic :: Scientific/Engineering :: Physics",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Programming Language :: Python :: Implementation :: CPython",
        "Programming Language :: Python :: Implementation :: PyPy",
]

[tool.poetry.scripts]
ccu = 'ccu.cli.main:main'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
click = "*"
numpy = ">=1.24.2"
ase = ">=3.22.1"
scipy = ">=1.10.1"
pymatgen = ">=2023.9.2"

[tool.poetry.group.nox.dependencies]
nox-poetry = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-datadir = "*"
pytest-xdist = "*"

[tool.poetry.group.type_check.dependencies]
mypy = "*"

[tool.poetry.group.lint.dependencies]
ruff = ">=0.0.278"

[tool.poetry.group.format.dependencies]
black = "*"

[tool.poetry.group.vcs.dependencies]
pre-commit = "^2.20.0"
bump2version = "^1.0.1"
gitchangelog = "^3.0.4"

[tool.poetry.group.docs.dependencies]
esbonio = "*"
sphinx = "^7.0.1"
furo = "*"

[tool.black]
line-length = 79
target-version = ['py311']
skip-string-normalization = true

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-ra",
    "--strict-markers",
    "--doctest-modules",
    "--doctest-glob=*.rst",
    "--tb=short"
]
filterwarnings = [
    "error",
    "ignore::matplotlib._api.deprecation.MatplotlibDeprecationWarning",
    "ignore:invalid escape sequence:DeprecationWarning"
]
norecursedirs = "migrations"
python_files = [
    "test_*.py",
    "*_test.py",
    "tests.py"
]
testpaths = "tests"
markers = [
    "rotation_angle: specify the angle to be used for a Rotation fixture"
]

[tool.coverage.paths]
source =[
   'src',
   '*/site-packages'
]

[tool.coverage.run]
command_line = 'pytest'
branch = true
source = [
    'ccu',
    'tests'
]
parallel = true

[tool.ruff]
extend-exclude = ["static", "ci/templates"]
line-length = 79
src = ["src", "tests"]
target-version = "py311"

[tool.ruff.lint]
ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101", # flake8-bandit assert
    "S308", # flake8-bandit suspicious-mark-safe-usage
    "E501", # pycodestyle line-too-long
]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "EXE", # flake8-executable
    "F", # pyflakes
    "I", # isort
    "INT", # flake8-gettext
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
forced-separate = ["conftest"]
force-single-line = true
force-sort-within-sections = true
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["EXE002"]
"fancyplots.py" = ["F821"]  # REMOVE_ME: due to use of globals
