
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVCOMMA DIV FOREACH ID LBRACKET LIST LPAREN MINUS MOD MULT NUMBER PLUS RBRACKET RPAREN STRINGstatement : expressionstatement : FOREACH LPAREN foreachargs RPARENforeachargs : expressionforeachargs : expression COMMA NUMBERforeachargs : expression COMMA NUMBER COMMA NUMBERexpression : IDexpression : LPAREN expression RPARENexpression : ID LPAREN arglist RPARENarglist : expression COMMA arglistarglist : expressionexpression : expression PLUS expression\n                 | expression MINUS expression\n                 | expression MULT expression\n                 | expression DIV expression\n                 | expression MOD expressionexpression : MINUS expressionexpression : arrayarray : LBRACKET arglist RBRACKETarray : LIST LPAREN expression RPARENexpression : constantconstant : STRINGconstant : NUMBER'
    
_lr_action_items = {'FOREACH':([0,],[3,]),'ID':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LPAREN':([0,3,4,5,6,9,10,13,14,15,16,17,18,20,24,35,],[4,18,4,20,4,4,24,4,4,4,4,4,4,4,4,4,]),'MINUS':([0,2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,34,35,36,39,41,],[6,14,6,-6,6,-17,-20,6,-21,-22,6,6,6,6,6,6,14,6,-16,14,6,-11,-12,-13,-14,14,14,-7,-18,6,14,-8,-19,]),'LBRACKET':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LIST':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'STRING':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NUMBER':([0,4,6,9,13,14,15,16,17,18,20,24,35,38,43,],[12,12,12,12,12,12,12,12,12,12,12,12,12,42,44,]),'$end':([1,2,5,7,8,11,12,21,25,26,27,28,29,32,34,37,39,41,],[0,-1,-6,-17,-20,-21,-22,-16,-11,-12,-13,-14,-15,-7,-18,-2,-8,-19,]),'PLUS':([2,5,7,8,11,12,19,21,23,25,26,27,28,29,31,32,34,36,39,41,],[13,-6,-17,-20,-21,-22,13,-16,13,-11,-12,-13,-14,13,13,-7,-18,13,-8,-19,]),'MULT':([2,5,7,8,11,12,19,21,23,25,26,27,28,29,31,32,34,36,39,41,],[15,-6,-17,-20,-21,-22,15,15,15,15,15,-13,-14,15,15,-7,-18,15,-8,-19,]),'DIV':([2,5,7,8,11,12,19,21,23,25,26,27,28,29,31,32,34,36,39,41,],[16,-6,-17,-20,-21,-22,16,16,16,16,16,-13,-14,16,16,-7,-18,16,-8,-19,]),'MOD':([2,5,7,8,11,12,19,21,23,25,26,27,28,29,31,32,34,36,39,41,],[17,-6,-17,-20,-21,-22,17,-16,17,-11,-12,-13,-14,17,17,-7,-18,17,-8,-19,]),'RPAREN':([5,7,8,11,12,19,21,23,25,26,27,28,29,30,31,32,33,34,36,39,40,41,42,44,],[-6,-17,-20,-21,-22,32,-16,-10,-11,-12,-13,-14,-15,37,-3,-7,39,-18,41,-8,-9,-19,-4,-5,]),'COMMA':([5,7,8,11,12,21,23,25,26,27,28,29,31,32,34,39,41,42,],[-6,-17,-20,-21,-22,-16,35,-11,-12,-13,-14,-15,38,-7,-18,-8,-19,43,]),'RBRACKET':([5,7,8,11,12,21,22,23,25,26,27,28,29,32,34,39,40,41,],[-6,-17,-20,-21,-22,-16,34,-10,-11,-12,-13,-14,-15,-7,-18,-8,-9,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[2,19,21,23,25,26,27,28,29,31,23,36,23,]),'array':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constant':([0,4,6,9,13,14,15,16,17,18,20,24,35,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'arglist':([9,20,35,],[22,33,40,]),'foreachargs':([18,],[30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','promptgen.py',496),
  ('statement -> FOREACH LPAREN foreachargs RPAREN','statement',4,'p_statement_foreach','promptgen.py',502),
  ('foreachargs -> expression','foreachargs',1,'p_foreachargs_onearg','promptgen.py',506),
  ('foreachargs -> expression COMMA NUMBER','foreachargs',3,'p_foreachargs_twoarg','promptgen.py',510),
  ('foreachargs -> expression COMMA NUMBER COMMA NUMBER','foreachargs',5,'p_foreachargs_threearg','promptgen.py',514),
  ('expression -> ID','expression',1,'p_expression_id','promptgen.py',520),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','promptgen.py',524),
  ('expression -> ID LPAREN arglist RPAREN','expression',4,'p_expression_func','promptgen.py',530),
  ('arglist -> expression COMMA arglist','arglist',3,'p_arglist_args','promptgen.py',534),
  ('arglist -> expression','arglist',1,'p_arglist_expr','promptgen.py',539),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','promptgen.py',544),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','promptgen.py',545),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','promptgen.py',546),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','promptgen.py',547),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','promptgen.py',548),
  ('expression -> MINUS expression','expression',2,'p_expression_unop','promptgen.py',552),
  ('expression -> array','expression',1,'p_expression_array','promptgen.py',558),
  ('array -> LBRACKET arglist RBRACKET','array',3,'p_array','promptgen.py',562),
  ('array -> LIST LPAREN expression RPAREN','array',4,'p_expression_list','promptgen.py',566),
  ('expression -> constant','expression',1,'p_expression_constant','promptgen.py',573),
  ('constant -> STRING','constant',1,'p_constant_string','promptgen.py',577),
  ('constant -> NUMBER','constant',1,'p_constant_number','promptgen.py',581),
]
