.. meta::
    :description:
        Features of using the Roundup Issue Tracker. Describes
        all access methods, configuration and workflow capabilities.
	Links to detailed documentation.

================
Roundup Features
================

Roundup is an easy-to-use and -install issue-tracking system with
web, e-mail and command-line interfaces. Based on the winning design
from Ka-Ping Yee in the :index:`Software Carpentry` "Track" design competition.

*simple to install*
 - instant-gratification ``python demo.py`` takes less than 5 minutes :)
 - installation (including web interface) takes about 30 minutes
 - five templates included in the distribution for you to base your tracker on
 - play with the demo, customise it and then use *it* as the template for
   your production tracker
 - requires *no* additional support software - python (3.6+ or 2.7) is
   enough to get you going
 - supports embedded databases like sqlite_ and dbm so you don't
   need a separate database like mysql_ or postgresql_

*simple to use*
 - accessible through the web (html, REST or XMLRPC), email,
   command-line or Python programs
 - use it to track bugs, features, user feedback, sales opportunities,
   fleet maintenance requests, office issues, milestones, ...
 - issues have their own mini mailing list (nosy list)
 - indexed Full Text Search (FTS) gives fast responses to searches across all
   messages and indexed string properties
 - users may sign themselves up, there may be automatic signup for
   incoming email and users may handle their own password reset requests
 - automatically keeps a full history of changes to issues with
   configurable verbosity and easy access to information about who created
   or last modified *any* item in the database

*highly configurable*
 - web interface HTML is fully editable
 - database schema is also fully editable (only the "user" class is required)
   with a full set of data types (including dates and many-to-many relations)
   across all storages available
 - fine grained authorization can be based on the properties of
   a user and resource (`Attribute or Policy/Purpose Based Access
   Control (ABAC or PBAC)
   <https://en.wikipedia.org/wiki/Attribute-based_access_control>`_))
 - customised automatic auditors and reactors to perform
   actions before and after changes are made to entries in the database,
   or may veto the creation or modification of items in the database
 - samples are provided for all manner of configuration changes and
   customisations

*fast, scalable*
 - with the sqlite, mysql and postgresql backends, roundup is
   also fast and scalable, easily handling thousands of issues and users
   with decent response times
 - database indexes are automatically added for those backends that
   support them (sqlite, mysql and postgresql)
 - support for the Xapian, Whoosh, sqlite or postgres full-text
   indexing engines for large trackers

*documented*
 - documentation exists for installation, upgrading, maintenance, users and
   customisation

*web interface*
 - fully editable interfaces for listing and display of items
 - extendable to include wizards, parent/meta bug displays, ...
 - differentiates between anonymous, known and admin users
 - may be set up to require login, and may also only allow admin users
   to register new users
 - authentication of user registration and user-driven password resetting
   using email and one time keys
 - may be run using a stand alone web server, WSGI (with mod_wsi or
   the depricated mod_python under Apache), as a plain cgi script, or
   through Zope
 - searching may be performed using many constraints, including a full-text
   search of messages attached to issues
 - file attachments (added through the web or email) are served up with the
   correct content-type and filename
 - email change messages generated by roundup appear to be sent by the
   person who made the change, but responses will go back through the nosy
   list by default
 - flexible access control built around Permissions and Roles with assigned
   Permissions
 - detects concurrent user changes
 - saving and editing of user-defined queries which may optionally be
   shared with other users

*e-mail interface*
 - may be set up using sendmail-like delivery alias, POP polling or mailbox
   polling
 - may auto-register users who send in mail and aren't known to roundup
 - nosy list configuration controls how people are added and when messages
   are sent to the list
 - auto-filing of "unformatted" messages into a particular class
 - e-mail attachments are handled sanely, being attached to the issue they're
   intended for, and forwarded on to the nosy list
 - sane handling of content-type and content-encoding of messages (text/plain
   preferred in all situations)
 - email packages that display threading will show issue messages correctly
   threaded
 - users may send in messages from multiple addresses and be associated
   with the same roundup username
 - built-in security features like TLS and APOP

*command-line*
 - may be used to interactively manage roundup databases
 - may be scripted using standard shell scripting
 - roundup's API may also be used by other Python programs - for
   example a Python script torun daily email people their assigned
   issues is provided
 - a variety of sample shell scripts are provided (weekly reports, issue
   generation, ...)

*xmlrpc interface*
 - simple remote tracker interface with basic HTTP authentication
   available at the /xmlrpc endpoint.
 - provides same access to tracker as roundup-admin, but based on
   XMLRPC calls
 - see the `xmlrpc guide`_ for more details basic and advanced clients etc.

*RESTful interface*
 - accessible using basic HTTP authentication at /rest starting point
 - able to be extended with new endpoints
 - authentication can be done using JSON Web Tokens (JWT)
 - CORS support for use by third party web pages.
 - see the `rest guide`_ for details.

.. _sqlite: https://www.sqlite.org/index.html
.. _mysql: https://pypi.org/project/MySQL-python/
.. _postgresql: https://www.psycopg.org/
.. _`xmlrpc guide`: xmlrpc.html
.. _`rest guide`: rest.html
