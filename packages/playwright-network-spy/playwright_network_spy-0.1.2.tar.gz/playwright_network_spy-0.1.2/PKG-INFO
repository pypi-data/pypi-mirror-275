Metadata-Version: 2.1
Name: playwright-network-spy
Version: 0.1.2
Summary: üî• A powerful tool for crawling any website on Earth with infinite scrolling, using Playwright.
Home-page: https://github.com/playwright-network-spy/playwright-page-pool
License: MIT
Author: YeonGyu-Kim
Author-email: code.yeon.gyu@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: pip
Requires-Dist: playwright
Project-URL: Repository, https://github.com/playwright-network-spy/playwright-page-pool
Description-Content-Type: text/markdown

# Playwright Network Spy üïµÔ∏è‚Äç‚ôÇÔ∏èüåê

[![PyPI version](https://badge.fury.io/py/playwright-network-spy.svg)](https://badge.fury.io/py/playwright-network-spy)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

Playwright Network Spy is a powerful Python library that simplifies network capturing when using Playwright.
It allows you to easily capture and retrieve information from any website on the internet, even in modern web environments that heavily utilize infinite scrolling and REST APIs. üåçüíª

**Crawl from network responses, not from unstable DOMs!**


- üé£ Intercept and capture network responses effortlessly
- üîç Filter responses based on custom criteria
- üì• Retrieve JSON and video responses with ease
- üöÄ Seamlessly integrate with Playwright for enhanced web scraping capabilities
- üêç Intuitive and Pythonic API for a delightful developer experience
- ‚ôæÔ∏è Handle infinite scrolling websites with ease
- üåê Capture data from REST APIs used by modern web applications

## Installation üíæ

You can install Playwright Network Spy using pip:
```sh
pip install playwright-network-spy
```

## Usage üõ†Ô∏è

Here's a simple example of how to use Playwright Network Spy to capture and print SVG images from a website

```python
from typing import Any, Dict, Tuple

from playwright.async_api import Page, Response, async_playwright

from playwright_network_spy.spy import NetworkSpy


async def capture_and_print_svg_from_cloudflare(page: Page) -> None:
    async def _is_svg(response: Response) -> bool:
        return response.url.endswith(".svg")

    spy = NetworkSpy(page, _is_svg)

    await page.goto("https://cloudflare.com")
    responses = spy.get_new_responses()
    print(responses)  # [<Response url='https://www.cloudflare.com/img/privacyoptions.svg'>, ...]


async def main(*args: Tuple[Any, ...], **kwargs: Dict[str, Any]) -> None:
    async with async_playwright() as playwright:
        webdriver = playwright.chromium
        async with await webdriver.launch() as browser:
            async with await browser.new_page() as page:
                await capture_and_print_svg_from_cloudflare(page)


if __name__ == "__main__":
    import asyncio

    asyncio.run(main())
```

Playwright Network Spy is designed for modern websites that are complex to parse from the DOM. Instead of parsing, simply capture the entire JSON response and utilize it. üòù

For more detailed examples, you can refer to the [Example](examples/) in our GitHub repository.

- [**Instagram Post Crawler (Infinite Scroll + REST API)**](examples/instagram.py)


## Documentation üìö

For detailed documentation and more examples, please visit our official documentation.
Contributing ü§ù
We welcome contributions from the community! If you find any issues or have suggestions for improvements, please feel free to open an issue or submit a pull request on our GitHub repository.

## License üìú
This project is licensed under the MIT License. See the LICENSE file for more information.

