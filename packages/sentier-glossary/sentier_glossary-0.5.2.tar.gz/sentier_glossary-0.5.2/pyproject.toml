[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sentier_glossary"
authors = [
  { name="João Gonçalves", email="jsvgoncalves@gmail.com"},
  { name="Chris Mutel", email="cmutel@gmail.com" }
]
maintainers = [
  { name="João Gonçalves", email="jsvgoncalves@gmail.com"},
  { name="Chris Mutel", email="cmutel@gmail.com" }
]
description = "Client interface to sentier.dev sustainability assessment glossary"
readme = "README.md"
dynamic = ["version"]
# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering"
]
requires-python = ">=3.10"
dependencies = [
    # dependencies as strings with quotes, e.g. "foo"
    # You can add version requirements like "foo>2.0"
    "pydantic-settings",
    "requests",
    "sentence_transformers",
    "torch",
    "pandas",
]

[project.urls]
source = "https://github.com/Depart-de-Sentier/sentier_glossary"
homepage = "https://github.com/Depart-de-Sentier/sentier_glossary"
tracker = "https://github.com/Depart-de-Sentier/sentier_glossary/issues"

[project.optional-dependencies]
# Getting recursive dependencies to work is a pain, this
# seems to work, at least for now
testing = [
    "sentier_glossary",
    "pytest",
    "pytest-cov",
    "python-coveralls"
]
dev = [
    "build",
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "pytest-randomly",
    "setuptools",
    "types-requests",
]

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = true
packages = ["sentier_glossary"]

[tool.setuptools.dynamic]
version = {attr = "sentier_glossary.__version__"}

[tool.pytest.ini_options]
addopts = "--cov sentier_glossary --cov-report term-missing --verbose -m \"not slow\""
norecursedirs = [
    "dist",
    "build",
    ".tox"
]
testpaths = ["tests/*/*.py"]
markers = [
    "slow: marks tests as slow (run all with '-m \"slow or not slow\"')",
]

[tool.flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 100
extend_ignore = ["E203", "W503"]
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude = [
    ".tox",
    "build",
    "dist",
    ".eggs",
    "docs/conf.py",
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
