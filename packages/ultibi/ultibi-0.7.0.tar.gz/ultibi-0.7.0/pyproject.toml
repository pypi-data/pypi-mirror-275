[build-system]
requires = ["maturin>=1.0,<2"]
build-backend = "maturin"

[project]
name = "ultibi"
description = "Flexible DataFrame Operations via UI"
readme = "README.md"
authors = [
  { name = "Anatoly Bugakov", email = "anatoly@ultimabi.uk" },
]
license = { file = "LICENSE" }
dependencies = [
  "polars  == 0.20.27",
  "pyarrow >= 7.0.0",
]
keywords = ["dataframe", "visualization","pivot","table","pivottable", "aggregation", "calculation", 
  "chart", "data", "dataviz", "pivot-table", "frtb", "risk"]
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Rust",
    "License :: Free To Use But Restricted",
    "Topic :: Scientific/Engineering",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.urls]
Homepage = "https://ultimabi.uk/"
Documentation = "https://ultimabi.uk/ultibi-frtb-book/"
Repository = "https://github.com/ultima-ib/ultibi-frtb-book"

[tool.ruff]
line-length = 88
# Assume Python 3.9 
# Not everyone yet upgraded to newest
target-version = "py39"

[tool.isort]
profile = "black"

[tool.mypy]
files = ["ultibi", "tests"]
namespace_packages = true
show_error_codes = true
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]
disable_error_code = [
  "empty-body",
]
python_version = "3.9" # MRV of Python for Ultibi is 3.9
exclude = ['venv', '.venv']

[[tool.mypy.overrides]]
module = [
  "pyarrow.*",
  "ultibi.rust_module.ultibi_engine",
]
ignore_missing_imports = true

# [[tool.mypy.overrides]]
# module = "test_db"
# ignore_errors = true

[[tool.mypy.overrides]]
module = ["ultibi.*"]
# We exclude the ultima module from warn_return_any, because the PyO3 api does not have Python
# type annotations. See https://github.com/PyO3/pyo3/issues/1112 for a discussion on adding
# this capability. We could add a stub file for ultima.rust_module.ultibi_engine (the PyO3 api), but that
# amounts to duplicating almost all type annotations on our api, as the Python api itself is a
# thin wrapper around the PyO3 api to start with.
warn_return_any = false

[tool.maturin]
module-name = "ultibi.rust_module.ultibi_engine"
manifest-path = "pyultima/Cargo.toml"



