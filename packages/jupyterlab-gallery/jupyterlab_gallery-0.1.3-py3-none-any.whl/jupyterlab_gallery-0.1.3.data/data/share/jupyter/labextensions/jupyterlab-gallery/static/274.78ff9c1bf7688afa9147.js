"use strict";(self.webpackChunkjupyterlab_gallery=self.webpackChunkjupyterlab_gallery||[]).push([[274],{274:(e,t,r)=>{r.r(t),r.d(t,{default:()=>E});var a=r(450),s=r(218),n=r(989),i=r(107),l=r(345),o=r(420),c=r(760),d=r(602),p=r(445),h=r(590);async function u(e="",t={}){const r=h.ServerConnection.makeSettings(),a=p.URLExt.join(r.baseUrl,"jupyterlab-gallery",e);let s;try{s=await h.ServerConnection.makeRequest(a,t,r)}catch(e){throw new h.ServerConnection.NetworkError(e)}let n=await s.text();if(n.length>0)try{n=JSON.parse(n)}catch(e){console.log("Not a JSON response body.",s)}if(!s.ok)throw new h.ServerConnection.ResponseError(s,n.message||n);return n}class g extends o.ReactWidget{constructor(e){super(),this._update=new d.Signal(this),this._exhibits=null,this._stream=new d.Stream(this);const{trans:t,fileChanged:r}=e;this._trans=t,this._status=t.__("Gallery loading..."),this._actions={open:async t=>{e.openPath(t.localPath)},download:async t=>{const r=new Promise(((e,r)=>{this._stream.connect(((a,s)=>{s.exhibit_id===t.id&&("finished"===s.phase?e():"error"===s.phase&&r())}))}));await u("pull",{method:"POST",body:JSON.stringify({exhibit_id:t.id})}),await r,await this._load(),await e.refreshFileBrowser()}},r.connect(((e,t)=>{"delete"===t.type&&this._load()})),this._eventSource=function(e="",t,r){const a=h.ServerConnection.makeSettings(),s=p.URLExt.join(a.baseUrl,"jupyterlab-gallery",e),n=new EventSource(s);return n.addEventListener("message",(e=>{const r=JSON.parse(e.data);t(r)})),n.addEventListener("error",(e=>{r(e)})),n}("pull",(e=>{this._stream.emit(e)}),(e=>{console.error(e)})),this._load()}dispose(){super.dispose(),this._eventSource.close()}async _load(){try{const e=await u("exhibits");this.exhibits=e.exhibits}catch(e){this._status=`jupyterlab_gallery server failed:\n${e}`}this.update()}get exhibits(){return this._exhibits}set exhibits(e){this._exhibits=e}update(){super.update(),this._update.emit()}render(){return l.createElement(c.UseSignal,{signal:this._update},(()=>this.exhibits?l.createElement(m,{exhibits:this.exhibits,actions:this._actions,progressStream:this._stream,trans:this._trans}):l.createElement("div",{className:"jp-Gallery jp-mod-loading"},this._status)))}}function m(e){return l.createElement("div",{className:"jp-Gallery"},e.exhibits.map((t=>l.createElement(y,{trans:e.trans,key:t.repository,exhibit:t,actions:e.actions,progressStream:e.progressStream}))))}function y(e){const{exhibit:t,actions:r}=e,[a,s]=l.useState(null),[n,i]=l.useState("");return l.useEffect((()=>{const r=(e,r)=>{var a;if(r.exhibit_id===t.id)if("error"===r.phase&&(0,o.showErrorMessage)("Could not download",null!==(a=r.output)&&void 0!==a?a:"Unknown error"),"progress"===r.phase)s(r.output),i(r.output.message);else{const{output:e,phase:t}=r;console.log(e+t)}};return e.progressStream.connect(r),()=>{e.progressStream.disconnect(r)}})),l.createElement("div",{className:"jp-Exhibit"},l.createElement("h4",{className:"jp-Exhibit-title"},t.title),l.createElement("div",{className:"jp-Exhibit-icon"},l.createElement("img",{src:t.icon,alt:t.title})),l.createElement("div",{className:"jp-Exhibit-description"},t.description),a?l.createElement("div",{className:"jp-Exhibit-progressbar"+("error"===a.state?" jp-Exhibit-progressbar-error":"")},l.createElement("div",{className:"jp-Exhibit-progressbar-filler",style:{width:100*a.progress+"%"}}),l.createElement("div",{className:"jp-Exhibit-progressMessage"},n)):null,l.createElement("div",{className:"jp-Exhibit-buttons"},t.isCloned?l.createElement(l.Fragment,null,l.createElement(c.Button,{minimal:!0,title:e.trans.__("Open"),onClick:()=>{r.open(t)}},l.createElement(c.folderIcon.react,null)),l.createElement(c.Button,{disabled:!t.updatesAvailable,minimal:!0,title:e.trans.__("Fetch latest changes"),onClick:async()=>{i("Refreshing"),s({progress:.25,message:"Refreshing"});try{await r.download(t),s(null)}catch(e){s({...a,state:"error"}),i("")}}},l.createElement(c.downloadIcon.react,null))):l.createElement(c.Button,{title:e.trans.__("Set up"),onClick:async()=>{i("Downloading"),s({progress:.01,message:"Initializing"});try{await r.download(t),s(null)}catch(e){s({...a,state:"error"}),i("")}}},l.createElement(c.downloadIcon.react,null))))}const b=new c.LabIcon({name:"jupyterlab-gallery:gallery",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="jp-icon3" fill="rgb(97,97,97)" d="M1 3V21H23V3H1M21 5V14H3V5H21M11 16V19H8V16H11M3 16H6V19H3V16M13 19V16H16V19H13M18 19V16H21V19H18Z" /></svg>'}),w={id:"jupyterlab-gallery:plugin",description:"A JupyterLab gallery extension for presenting and downloading examples from remote repositories",autoStart:!0,requires:[s.ISettingRegistry],optional:[n.IFileBrowserCommands,a.ITranslator,i.ILauncher],activate:async(e,t,r,s,n)=>{console.log("JupyterLab extension jupyterlab-gallery is activated!");const i=(s=null!=s?s:a.nullTranslator).load("jupyterlab-gallery"),l=new g({trans:i,openPath:t=>{if(!r)throw Error("filebrowser not available");e.commands.execute(r.openPath,{path:t})},fileChanged:e.serviceManager.contents.fileChanged,refreshFileBrowser:()=>e.commands.execute("filebrowser:refresh")}),o=await u("gallery");"1.0"!==o.apiVersion&&console.warn(`jupyter-gallery API version out of sync, expected 1.0, got ${o.apiVersion}`);const c="Gallery"===o.title?i.__("Gallery"):o.title;n&&function(e){return"addSection"in e}(n)?n.addSection({title:c,className:"jp-Launcher-openExample",icon:b,id:"gallery",rank:2.5,render:()=>l.render()}):(l.id="jupyterlab-gallery:sidebar",l.title.icon=b,l.title.caption=c,l.show(),e.shell.add(l,"left",{rank:850}));try{const e=await t.load(w.id);console.log("jupyterlab-gallery settings loaded:",e.composite)}catch(e){return void console.error("Failed to load settings for jupyterlab-gallery.",e)}}},E=w}}]);