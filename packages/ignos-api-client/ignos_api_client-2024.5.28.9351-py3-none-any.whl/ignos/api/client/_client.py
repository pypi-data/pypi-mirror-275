# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING

from azure.core import PipelineClient
from azure.core.pipeline import policies
from azure.core.rest import HttpRequest, HttpResponse

from . import models as _models
from ._configuration import IgnosPortalConfiguration
from ._serialization import Deserializer, Serializer
from .operations import (
    AlertsOperations,
    AssetsOperations,
    AzureRegionsOperations,
    BookingOperations,
    CdfOperations,
    CncFileTransferOperations,
    CncSetupAgentOperations,
    CncSetupOperations,
    CompaniesOperations,
    CountriesOperations,
    CustomerOrdersOperations,
    CustomersOperations,
    DocumentTypesOperations,
    DocumentsOperations,
    ElectricalOperations,
    ExternalAccessOperations,
    ExternalOperations,
    ExternalServicesOperations,
    LinksOperations,
    LocationsOperations,
    MachineAlarmsOperations,
    MachineUtilizationOperations,
    MachinesOperations,
    MeOperations,
    MeasurementFormSchemasOperations,
    MeasurementFormsInstancesOperations,
    MeasuringToolsOperations,
    MesDocumentsOperations,
    MesLinksOperations,
    MesOperations,
    MesProductionOrderOperations,
    MesProductionScheduleOperations,
    MesProjectsOperations,
    MesResourceOperations,
    MrbOperations,
    OperatorCalculatorsOperations,
    PowerOperations,
    PresentationOperations,
    ResourcesOperations,
    SuppliersOperations,
    SustainabilityOperations,
    SystemHealthDashboardOperations,
    TraceOperations,
    TrackingOperations,
    UploadOperations,
    UsersOperations,
    WeldingOperations,
    WorkordersOperations,
    WorkspaceTemplatesAdminOperations,
    WorkspaceTemplatesOperations,
    WorkspacesOperations,
)

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential


class IgnosPortal:  # pylint: disable=client-accepts-api-version-keyword,too-many-instance-attributes
    """IgnosPortal.

    :ivar alerts: AlertsOperations operations
    :vartype alerts: ignos.api.client.operations.AlertsOperations
    :ivar assets: AssetsOperations operations
    :vartype assets: ignos.api.client.operations.AssetsOperations
    :ivar azure_regions: AzureRegionsOperations operations
    :vartype azure_regions: ignos.api.client.operations.AzureRegionsOperations
    :ivar booking: BookingOperations operations
    :vartype booking: ignos.api.client.operations.BookingOperations
    :ivar cdf: CdfOperations operations
    :vartype cdf: ignos.api.client.operations.CdfOperations
    :ivar cnc_file_transfer: CncFileTransferOperations operations
    :vartype cnc_file_transfer: ignos.api.client.operations.CncFileTransferOperations
    :ivar cnc_setup: CncSetupOperations operations
    :vartype cnc_setup: ignos.api.client.operations.CncSetupOperations
    :ivar cnc_setup_agent: CncSetupAgentOperations operations
    :vartype cnc_setup_agent: ignos.api.client.operations.CncSetupAgentOperations
    :ivar countries: CountriesOperations operations
    :vartype countries: ignos.api.client.operations.CountriesOperations
    :ivar customers: CustomersOperations operations
    :vartype customers: ignos.api.client.operations.CustomersOperations
    :ivar documents: DocumentsOperations operations
    :vartype documents: ignos.api.client.operations.DocumentsOperations
    :ivar document_types: DocumentTypesOperations operations
    :vartype document_types: ignos.api.client.operations.DocumentTypesOperations
    :ivar companies: CompaniesOperations operations
    :vartype companies: ignos.api.client.operations.CompaniesOperations
    :ivar customer_orders: CustomerOrdersOperations operations
    :vartype customer_orders: ignos.api.client.operations.CustomerOrdersOperations
    :ivar resources: ResourcesOperations operations
    :vartype resources: ignos.api.client.operations.ResourcesOperations
    :ivar workorders: WorkordersOperations operations
    :vartype workorders: ignos.api.client.operations.WorkordersOperations
    :ivar external: ExternalOperations operations
    :vartype external: ignos.api.client.operations.ExternalOperations
    :ivar external_access: ExternalAccessOperations operations
    :vartype external_access: ignos.api.client.operations.ExternalAccessOperations
    :ivar external_services: ExternalServicesOperations operations
    :vartype external_services: ignos.api.client.operations.ExternalServicesOperations
    :ivar electrical: ElectricalOperations operations
    :vartype electrical: ignos.api.client.operations.ElectricalOperations
    :ivar welding: WeldingOperations operations
    :vartype welding: ignos.api.client.operations.WeldingOperations
    :ivar links: LinksOperations operations
    :vartype links: ignos.api.client.operations.LinksOperations
    :ivar locations: LocationsOperations operations
    :vartype locations: ignos.api.client.operations.LocationsOperations
    :ivar machine_alarms: MachineAlarmsOperations operations
    :vartype machine_alarms: ignos.api.client.operations.MachineAlarmsOperations
    :ivar machines: MachinesOperations operations
    :vartype machines: ignos.api.client.operations.MachinesOperations
    :ivar machine_utilization: MachineUtilizationOperations operations
    :vartype machine_utilization: ignos.api.client.operations.MachineUtilizationOperations
    :ivar me: MeOperations operations
    :vartype me: ignos.api.client.operations.MeOperations
    :ivar measurement_form_schemas: MeasurementFormSchemasOperations operations
    :vartype measurement_form_schemas: ignos.api.client.operations.MeasurementFormSchemasOperations
    :ivar measurement_forms_instances: MeasurementFormsInstancesOperations operations
    :vartype measurement_forms_instances:
     ignos.api.client.operations.MeasurementFormsInstancesOperations
    :ivar measuring_tools: MeasuringToolsOperations operations
    :vartype measuring_tools: ignos.api.client.operations.MeasuringToolsOperations
    :ivar mes: MesOperations operations
    :vartype mes: ignos.api.client.operations.MesOperations
    :ivar mes_documents: MesDocumentsOperations operations
    :vartype mes_documents: ignos.api.client.operations.MesDocumentsOperations
    :ivar mes_links: MesLinksOperations operations
    :vartype mes_links: ignos.api.client.operations.MesLinksOperations
    :ivar mes_production_order: MesProductionOrderOperations operations
    :vartype mes_production_order: ignos.api.client.operations.MesProductionOrderOperations
    :ivar mes_production_schedule: MesProductionScheduleOperations operations
    :vartype mes_production_schedule: ignos.api.client.operations.MesProductionScheduleOperations
    :ivar mes_projects: MesProjectsOperations operations
    :vartype mes_projects: ignos.api.client.operations.MesProjectsOperations
    :ivar mes_resource: MesResourceOperations operations
    :vartype mes_resource: ignos.api.client.operations.MesResourceOperations
    :ivar mrb: MrbOperations operations
    :vartype mrb: ignos.api.client.operations.MrbOperations
    :ivar operator_calculators: OperatorCalculatorsOperations operations
    :vartype operator_calculators: ignos.api.client.operations.OperatorCalculatorsOperations
    :ivar power: PowerOperations operations
    :vartype power: ignos.api.client.operations.PowerOperations
    :ivar presentation: PresentationOperations operations
    :vartype presentation: ignos.api.client.operations.PresentationOperations
    :ivar suppliers: SuppliersOperations operations
    :vartype suppliers: ignos.api.client.operations.SuppliersOperations
    :ivar sustainability: SustainabilityOperations operations
    :vartype sustainability: ignos.api.client.operations.SustainabilityOperations
    :ivar system_health_dashboard: SystemHealthDashboardOperations operations
    :vartype system_health_dashboard: ignos.api.client.operations.SystemHealthDashboardOperations
    :ivar trace: TraceOperations operations
    :vartype trace: ignos.api.client.operations.TraceOperations
    :ivar tracking: TrackingOperations operations
    :vartype tracking: ignos.api.client.operations.TrackingOperations
    :ivar upload: UploadOperations operations
    :vartype upload: ignos.api.client.operations.UploadOperations
    :ivar users: UsersOperations operations
    :vartype users: ignos.api.client.operations.UsersOperations
    :ivar workspaces: WorkspacesOperations operations
    :vartype workspaces: ignos.api.client.operations.WorkspacesOperations
    :ivar workspace_templates_admin: WorkspaceTemplatesAdminOperations operations
    :vartype workspace_templates_admin:
     ignos.api.client.operations.WorkspaceTemplatesAdminOperations
    :ivar workspace_templates: WorkspaceTemplatesOperations operations
    :vartype workspace_templates: ignos.api.client.operations.WorkspaceTemplatesOperations
    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :keyword endpoint: Service URL. Required. Default value is "".
    :paramtype endpoint: str
    """

    def __init__(self, credential: "TokenCredential", *, endpoint: str = "", **kwargs: Any) -> None:
        self._config = IgnosPortalConfiguration(credential=credential, **kwargs)
        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.DistributedTracingPolicy(**kwargs),
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: PipelineClient = PipelineClient(base_url=endpoint, policies=_policies, **kwargs)

        client_models = {k: v for k, v in _models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False
        self.alerts = AlertsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.assets = AssetsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.azure_regions = AzureRegionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.booking = BookingOperations(self._client, self._config, self._serialize, self._deserialize)
        self.cdf = CdfOperations(self._client, self._config, self._serialize, self._deserialize)
        self.cnc_file_transfer = CncFileTransferOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.cnc_setup = CncSetupOperations(self._client, self._config, self._serialize, self._deserialize)
        self.cnc_setup_agent = CncSetupAgentOperations(self._client, self._config, self._serialize, self._deserialize)
        self.countries = CountriesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.customers = CustomersOperations(self._client, self._config, self._serialize, self._deserialize)
        self.documents = DocumentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.document_types = DocumentTypesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.companies = CompaniesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.customer_orders = CustomerOrdersOperations(self._client, self._config, self._serialize, self._deserialize)
        self.resources = ResourcesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.workorders = WorkordersOperations(self._client, self._config, self._serialize, self._deserialize)
        self.external = ExternalOperations(self._client, self._config, self._serialize, self._deserialize)
        self.external_access = ExternalAccessOperations(self._client, self._config, self._serialize, self._deserialize)
        self.external_services = ExternalServicesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.electrical = ElectricalOperations(self._client, self._config, self._serialize, self._deserialize)
        self.welding = WeldingOperations(self._client, self._config, self._serialize, self._deserialize)
        self.links = LinksOperations(self._client, self._config, self._serialize, self._deserialize)
        self.locations = LocationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.machine_alarms = MachineAlarmsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.machines = MachinesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.machine_utilization = MachineUtilizationOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.me = MeOperations(self._client, self._config, self._serialize, self._deserialize)
        self.measurement_form_schemas = MeasurementFormSchemasOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.measurement_forms_instances = MeasurementFormsInstancesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.measuring_tools = MeasuringToolsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.mes = MesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.mes_documents = MesDocumentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.mes_links = MesLinksOperations(self._client, self._config, self._serialize, self._deserialize)
        self.mes_production_order = MesProductionOrderOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.mes_production_schedule = MesProductionScheduleOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.mes_projects = MesProjectsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.mes_resource = MesResourceOperations(self._client, self._config, self._serialize, self._deserialize)
        self.mrb = MrbOperations(self._client, self._config, self._serialize, self._deserialize)
        self.operator_calculators = OperatorCalculatorsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.power = PowerOperations(self._client, self._config, self._serialize, self._deserialize)
        self.presentation = PresentationOperations(self._client, self._config, self._serialize, self._deserialize)
        self.suppliers = SuppliersOperations(self._client, self._config, self._serialize, self._deserialize)
        self.sustainability = SustainabilityOperations(self._client, self._config, self._serialize, self._deserialize)
        self.system_health_dashboard = SystemHealthDashboardOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.trace = TraceOperations(self._client, self._config, self._serialize, self._deserialize)
        self.tracking = TrackingOperations(self._client, self._config, self._serialize, self._deserialize)
        self.upload = UploadOperations(self._client, self._config, self._serialize, self._deserialize)
        self.users = UsersOperations(self._client, self._config, self._serialize, self._deserialize)
        self.workspaces = WorkspacesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.workspace_templates_admin = WorkspaceTemplatesAdminOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.workspace_templates = WorkspaceTemplatesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )

    def send_request(self, request: HttpRequest, *, stream: bool = False, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client.send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> "IgnosPortal":
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
