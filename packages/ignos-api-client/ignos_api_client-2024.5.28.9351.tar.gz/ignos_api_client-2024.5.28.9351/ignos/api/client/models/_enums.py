# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AlertNotificationAccessStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """AlertNotificationAccessStatusDto."""

    ACCESS_OK = "AccessOk"
    NOT_INSTALLED = "NotInstalled"
    USER_NO_ACCESS = "UserNoAccess"


class BonusType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """BonusType."""

    NONE = "None"
    POSITIVE = "Positive"
    POSITIVE_AND_NEGATIVE = "PositiveAndNegative"


class BookingTypeDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """BookingTypeDto."""

    NORMAL_TRUCK = "NormalTruck"
    LARGE_TRUCK = "LargeTruck"
    SIDE_LOADING_TRUCK = "SideLoadingTruck"


class CalibrationListStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """CalibrationListStatus."""

    SOON_DUE = "SoonDue"
    EXPIRED = "Expired"


class CalibrationStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """CalibrationStatusDto."""

    UNCALIBRATED = "Uncalibrated"
    DEPRECATED = "Deprecated"
    EXPIRED = "Expired"
    SOON_DUE = "SoonDue"
    VALID = "Valid"


class CncFilterDeletedDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """CncFilterDeletedDto."""

    NONE_DELETED = "NoneDeleted"
    ONLY_DELETED = "OnlyDeleted"
    ALL = "All"


class CncOperationStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """CncOperationStatus."""

    DRAFT = "Draft"
    READY = "Ready"
    VERIFIED = "Verified"
    ARCHIVED = "Archived"


class CustomerOrderLineStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """CustomerOrderLineStatus."""

    DRAFT = "Draft"
    READY = "Ready"
    ONGOING = "Ongoing"
    COMPLETED = "Completed"
    DELETED = "Deleted"


class CustomerOrderStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """CustomerOrderStatus."""

    DRAFT = "Draft"
    READY = "Ready"
    ONGOING = "Ongoing"
    COMPLETED = "Completed"
    DELETED = "Deleted"


class DocumentMetadataRequirement(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentMetadataRequirement."""

    NOT_ALLOWED = "NotAllowed"
    OPTIONAL = "Optional"
    REQUIRED = "Required"


class DocumentNumberKey(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentNumberKey."""

    MULTIPLE = "Multiple"
    SINGLE_DOCUMENT = "SingleDocument"


class DocumentRequirementStrategy(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentRequirementStrategy."""

    NONE = "None"
    WORK_ORDER = "WorkOrder"
    LOT = "Lot"
    DRAWING = "Drawing"
    CUSTOMER_ORDER_LINE = "CustomerOrderLine"


class DocumentRuleType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentRuleType."""

    TAG = "Tag"
    SEQUENCES = "Sequences"
    ORDER_LINES = "OrderLines"
    LOT_NUMBERS = "LotNumbers"


class DocumentSource(int, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentSource."""

    ZERO = 0
    ONE = 1
    TWO = 2
    THREE = 3


class DocumentStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentStatus."""

    NONE = "None"
    DRAFT = "Draft"
    FOR_INTERNAL_APPROVAL = "ForInternalApproval"
    INTERNAL_REJECTED = "InternalRejected"
    APPROVED = "Approved"
    VOIDED = "Voided"


class DocumentTypeCategory(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentTypeCategory."""

    GENERAL = "General"
    PROCEDURE = "Procedure"
    DRAWING = "Drawing"
    REPORT = "Report"
    CERTIFICATE = "Certificate"


class DocumentTypeSearchOption(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentTypeSearchOption."""

    INCLUDE_APPROVED = "IncludeApproved"
    INCLUDE_DRAFT = "IncludeDraft"
    EXCLUDE = "Exclude"


class DocumentWorkflowType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DocumentWorkflowType."""

    NONE = "None"
    CUSTOMER_PROVIDED = "CustomerProvided"
    CUSTOMER_APPROVAL = "CustomerApproval"
    INTERNAL_WITH_FIX = "InternalWithFix"


class EmptyChapterStrategy(int, Enum, metaclass=CaseInsensitiveEnumMeta):
    """EmptyChapterStrategy."""

    ZERO = 0
    ONE = 1
    TWO = 2


class ErrorCauseDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ErrorCauseDto."""

    NONE = "None"
    MATERIAL = "Material"
    MACHINE = "Machine"
    OPERATING_STAFF = "OperatingStaff"


class ExternalServiceName(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ExternalServiceName."""

    DB_EXTRACTOR = "DbExtractor"
    MT_CONNECT_EXTRACTOR = "MtConnectExtractor"
    MQTT_CONNECTOR = "MqttConnector"


class FileTransferDirection(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """FileTransferDirection."""

    FROM_CLOUD = "FromCloud"
    TO_CLOUD = "ToCloud"


class FileTransferStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """FileTransferStatus."""

    IN_PROGRESS = "InProgress"
    SUCCESS = "Success"
    FAILED = "Failed"


class LocationKindDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """LocationKindDto."""

    WAREHOUSE = "Warehouse"
    ZONE = "Zone"
    LOCATION = "Location"


class MachineAlarmType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MachineAlarmType."""

    FAULT = "Fault"
    WARNING = "Warning"


class MachineState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MachineState."""

    IN_CYCLE = "InCycle"
    MASTER_CAM = "MasterCam"
    MDI_CYCLE = "MdiCycle"
    CAM_CYCLE = "CamCycle"
    IDLE = "Idle"
    OPTIONAL_STOP = "OptionalStop"
    PROGRAM_STOP = "ProgramStop"
    M0 = "M0"
    ATC_STOPPED = "AtcStopped"
    FEED_HOLD = "FeedHold"
    MDI_MODE = "MdiMode"
    MANUAL_MODE = "ManualMode"
    E_STOP = "EStop"
    ALARM = "Alarm"
    POWER_OFF = "PowerOff"


class MaterialPickStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MaterialPickStatus."""

    NOT_REQUIRED = "NotRequired"
    NOT_STARTED = "NotStarted"
    STARTED = "Started"
    COMPLETED = "Completed"
    UNKNOWN = "Unknown"


class MaterialStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MaterialStatus."""

    UNKNOWN = "Unknown"
    NOT_STARTED = "NotStarted"
    PARTIAL = "Partial"
    COMPLETED = "Completed"


class MaterialStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MaterialStatusDto."""

    NOT_REQUIRED = "NotRequired"
    NOT_AVAILABLE = "NotAvailable"
    PARTIALLY_AVAILABLE = "PartiallyAvailable"
    AVAILABLE = "Available"
    FULLY_CONSUMED = "FullyConsumed"
    UNKNOWN = "Unknown"


class MeasurementFormInstanceStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MeasurementFormInstanceStatus."""

    ACTIVE = "Active"
    CANCELLED = "Cancelled"
    COMPLETED = "Completed"
    APPROVED = "Approved"


class MeasurementFormSource(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MeasurementFormSource."""

    UNKNOWN = "Unknown"
    INSPECTION_XPERT = "InspectionXpert"
    EXCEL = "Excel"
    MANUAL = "Manual"


class MeasurementFormStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MeasurementFormStatus."""

    DRAFT = "Draft"
    RELEASED = "Released"
    REVOKED = "Revoked"


class MeasurementFormValueType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MeasurementFormValueType."""

    NONE = "None"
    BOOL = "Bool"
    DECIMAL = "Decimal"
    STRING = "String"


class MeasurementFrequency(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MeasurementFrequency."""

    ALL = "All"
    FIRST_ARTICLE = "FirstArticle"
    N_FIRST = "NFirst"
    N_PERCENT = "NPercent"
    ISO2859 = "ISO2859"
    NTH = "Nth"
    NONE = "None"


class MesLinkTypeDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MesLinkTypeDto."""

    STATIC = "Static"
    OPERATION = "Operation"
    WORK_ORDER = "WorkOrder"


class MrbElementType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MrbElementType."""

    MRB_TEMPLATE_PAGE = "MrbTemplatePage"
    MRB_GENERATED_DOCUMENTS = "MrbGeneratedDocuments"
    MRB_CHAPTER = "MrbChapter"
    MRB_CHAPTER_DOCUMENTS = "MrbChapterDocuments"
    MRB_PRODUCT = "MrbProduct"


class MrbIndexContentType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MrbIndexContentType."""

    CHAPTER = "Chapter"
    DOCUMENTS = "Documents"


class MrbJobStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """MrbJobStatus."""

    NOT_STARTED = "NotStarted"
    STARTED = "Started"
    COMPLETED = "Completed"
    FAILED = "Failed"


class Mutability(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Mutability."""

    IMMUTABLE = "Immutable"
    APPENDABLE = "Appendable"
    MUTABLE = "Mutable"


class NextOperationStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """NextOperationStatusDto."""

    IN_PROGRESS = "InProgress"
    STOPPED = "Stopped"
    COMPLETED = "Completed"


class NonConformanceType(int, Enum, metaclass=CaseInsensitiveEnumMeta):
    """NonConformanceType."""

    ONE = 1


class NotificationChannelDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """NotificationChannelDto."""

    TEAMS = "Teams"


class OperationStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """OperationStatusDto."""

    NOT_READY = "NotReady"
    READY = "Ready"
    ONGOING = "Ongoing"
    COMPLETED = "Completed"
    STOPPED = "Stopped"


class OrderReferenceTypeDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """OrderReferenceTypeDto."""

    PRODUCTION_ORDER = "ProductionOrder"
    PURCHASE_ORDER = "PurchaseOrder"
    SALES_ORDER = "SalesOrder"


class SchemaFeedbackStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """SchemaFeedbackStatus."""

    NEW = "New"
    IN_PROGRESS = "InProgress"


class SearchTypeDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """SearchTypeDto."""

    CONTAINS = "Contains"
    STARTS_WITH = "StartsWith"
    ENDS_WITH = "EndsWith"
    EQUALS = "Equals"


class TraceIncludeStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TraceIncludeStatus."""

    NONE = "None"
    FORCE_INCLUDE = "ForceInclude"
    EXCLUDE = "Exclude"


class TraceItemStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TraceItemStatus."""

    NONE = "None"
    OK = "OK"
    SCRAP = "Scrap"


class TraceStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TraceStatus."""

    NONE = "None"
    UNAVAILABLE = "Unavailable"
    NOT_NEEDED = "NotNeeded"
    PARTIAL = "Partial"
    COMPLETED = "Completed"


class TraceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TraceType."""

    NONE = "None"
    LOT = "Lot"
    BATCH = "Batch"
    SERIAL_NUMBER = "SerialNumber"


class TrackingStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TrackingStatusDto."""

    MANUAL = "Manual"
    BOOKING_PENDING = "BookingPending"
    BOOKING_CANCELLED = "BookingCancelled"
    BOOKING_IN_PROGRESS = "BookingInProgress"
    BOOKING_COMPLETE = "BookingComplete"


class UploadStatusDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """UploadStatusDto."""

    NOT_UPLOADED = "NotUploaded"
    AVAILABLE = "Available"
    DELETED = "Deleted"


class WorkorderStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """WorkorderStatus."""

    DRAFT = "Draft"
    READY = "Ready"
    ONGOING = "Ongoing"
    COMPLETED = "Completed"
    PRODUCTION_FINISHED = "ProductionFinished"
    DELETED = "Deleted"


class WorkTypeDto(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """WorkTypeDto."""

    NONE = "None"
    PRODUCTION = "Production"
    SETUP = "Setup"
