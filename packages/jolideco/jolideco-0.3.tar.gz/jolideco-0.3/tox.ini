[tox]
env_list =
    check-style
    test-xdist
    build-dist
    docs
isolated_build = true
# This is included for testing of the template. You can remove it safely.
skip_missing_interpreters = True
skipsdist = false
requires =   
    setuptools >= 30.3.0
    pip >= 19.3.1
set_env =
    PIP_INDEX_URL=https://download.pytorch.org/whl/cpu

[testenv:check-style]
description = check code style with ruff
change_dir = .
skip_install = true
deps = 
    ruff
commands = 
    ruff . {posargs}

[testenv]
# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    xdist: in parallel
    torch-113: with torch 1.13.1


# Pass through the following environment variables which may be needed for the CI
pass_env = 
    HOME
    WINDIR
    LC_ALL
    LC_CTYPE
    CC
    CI
    TRAVIS
    JOLIDECO_GMM_LIBRARY 

# Suppress display of matplotlib plots generated during docs build
set_env = 
    MPLBACKEND=agg


# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
change_dir = .tmp/{envname}

deps = 
    cov: pytest-cov
    oldestdeps: minimum_dependencies
    xdist: pytest-xdist
    torch-113: torch==1.13.1

# The following indicates which extras_require will be installed
extras =
    all
    test

commands_pre =
    oldestdeps: minimum_dependencies packagename --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    pip freeze

commands =
    pytest {toxinidir}/jolideco {toxinidir}/docs
    cov: --cov jolideco --cov-report xml:coverage.xml --cov-report term-missing
    xdist: -n auto {posargs}


[testenv:check-build]
description = check PEP517 package build
change_dir = .
skip_install = true
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/*

[testenv:docs]
change_dir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b html . _build/html 

[testenv:linkcheck]
change_dir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b linkcheck . _build/html

