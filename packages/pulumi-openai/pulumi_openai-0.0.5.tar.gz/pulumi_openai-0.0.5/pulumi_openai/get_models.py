# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetModelsResult',
    'AwaitableGetModelsResult',
    'get_models',
    'get_models_output',
]

@pulumi.output_type
class GetModelsResult:
    """
    A collection of values returned by getModels.
    """
    def __init__(__self__, id=None, models=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if models and not isinstance(models, list):
            raise TypeError("Expected argument 'models' to be a list")
        pulumi.set(__self__, "models", models)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Models identifier
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def models(self) -> Sequence['outputs.GetModelsModelResult']:
        """
        Models
        """
        return pulumi.get(self, "models")


class AwaitableGetModelsResult(GetModelsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetModelsResult(
            id=self.id,
            models=self.models)


def get_models(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetModelsResult:
    """
    Models data source

    ## Example Usage

    ```python
    import pulumi
    import pulumi_openai as openai

    models = openai.get_models()
    pulumi.export("modelCount", len(models.models))
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('openai:index/getModels:getModels', __args__, opts=opts, typ=GetModelsResult).value

    return AwaitableGetModelsResult(
        id=pulumi.get(__ret__, 'id'),
        models=pulumi.get(__ret__, 'models'))


@_utilities.lift_output_func(get_models)
def get_models_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetModelsResult]:
    """
    Models data source

    ## Example Usage

    ```python
    import pulumi
    import pulumi_openai as openai

    models = openai.get_models()
    pulumi.export("modelCount", len(models.models))
    ```
    """
    ...
