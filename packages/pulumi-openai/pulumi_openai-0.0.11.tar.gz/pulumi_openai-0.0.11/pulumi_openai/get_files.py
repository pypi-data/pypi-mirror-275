# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetFilesResult',
    'AwaitableGetFilesResult',
    'get_files',
    'get_files_output',
]

@pulumi.output_type
class GetFilesResult:
    """
    A collection of values returned by getFiles.
    """
    def __init__(__self__, files=None, id=None):
        if files and not isinstance(files, list):
            raise TypeError("Expected argument 'files' to be a list")
        pulumi.set(__self__, "files", files)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def files(self) -> Sequence['outputs.GetFilesFileResult']:
        """
        Files
        """
        return pulumi.get(self, "files")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Files identifier
        """
        return pulumi.get(self, "id")


class AwaitableGetFilesResult(GetFilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFilesResult(
            files=self.files,
            id=self.id)


def get_files(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFilesResult:
    """
    Files data source

    ## Example Usage

    ```python
    import pulumi
    import pulumi_openai as openai

    test = openai.get_files()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('openai:index/getFiles:getFiles', __args__, opts=opts, typ=GetFilesResult).value

    return AwaitableGetFilesResult(
        files=pulumi.get(__ret__, 'files'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_files)
def get_files_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFilesResult]:
    """
    Files data source

    ## Example Usage

    ```python
    import pulumi
    import pulumi_openai as openai

    test = openai.get_files()
    ```
    """
    ...
