from collections.abc import Sequence

class Stream:
    def __new__(cls: type, value: int | Sequence[float]):
        '''Create a new stream with either the number of channels or the given starting values.
        '''
    def __getitem__(self, index: int) -> float: ...
    def __setitem__(self, index: int, value: float) -> None: ...
    def __len__(self) -> int: ...
    def __str__(self) -> str: ...
    def __add__(self, other: Stream) -> Stream: ...
    def __iadd__(self, other: Stream) -> Stream: ...
    def __mul__(self, other: Stream) -> Stream: ...
    def __imul__(self, other: Stream) -> Stream: ...

class Node:
    def process(self, inputs: Sequence[Stream]) -> Sequence[Stream]: ...

class FrequencyNode(Node):
    @property
    def frequency(self) -> float: ...

    @frequency.setter
    def frequency(self, value: float) -> None: ...

def play(node: Node, sample_rate: int = 48000, channels: int = 2) -> None: ...
